(window.webpackJsonp=window.webpackJsonp||[]).push([[1679],{1738:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return u})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return s}));var r=a(2),i=a(6),n=(a(0),a(1808)),l={sidebar_label:"Work with TimePicker",title:"Work with TimePicker"},u={unversionedId:"timepicker/usage",id:"timepicker/usage",isDocsHomePage:!1,title:"Work with TimePicker",description:"You can change the value of the TimePicker or get its current value via the related API methods.",source:"@site/docs/timepicker/usage.md",slug:"/timepicker/usage",permalink:"/timepicker/usage",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/timepicker/usage.md",version:"current",sidebar_label:"Work with TimePicker",sidebar:"docs",previous:{title:"Configuration",permalink:"/timepicker/configuration"},next:{title:"Customization",permalink:"/timepicker/customization"}},c=[{value:"Setting value",id:"setting-value",children:[]},{value:"Getting value",id:"getting-value",children:[]}],o={rightToc:c};function s(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"You can change the value of the TimePicker or get its current value via the related API methods."),Object(n.b)("h2",{id:"setting-value"},"Setting value"),Object(n.b)("p",null,"There is the ",Object(n.b)("a",{parentName:"p",href:"/timepicker/api/timepicker_setvalue_method"},"setValue()")," method that makes it easy to change the value of the timepicker on the fly. The method takes as a parameter the value which can be passed in several formats:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"as a Date object"),Object(n.b)("li",{parentName:"ul"},"as a string"),Object(n.b)("li",{parentName:"ul"},"as an array with the following elements:",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"the hour value",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"the minutes value"),Object(n.b)("li",{parentName:"ul"},'the "AM/PM" identifier for 12-hour format as a string'))))),Object(n.b)("li",{parentName:"ul"},"as a number of milliseconds since January 1, 1970, 00:00:00 UTC returned by the ",Object(n.b)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime"},"getTime()"),"\nmethod of the ",Object(n.b)("strong",null,"Date")," object")),Object(n.b)("p",null,"For example:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'// set the value as a string\ntimepicker.setValue("00:39");\n\n// set the value as a Date object\ntimepicker.setValue(new Date(\'January 10, 2019 17:54:00\'));\n\n// set the value as an array\ntimepicker.setValue([6,20,"AM"]);\n\n// set the value as a number\ntimepicker.setValue(1559288966422);\n')),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/6r8lkhbg"},"https://snippet.dhtmlx.com/6r8lkhbg"),"\tTimepicker. Set Timepicker Value"),Object(n.b)("h2",{id:"getting-value"},"Getting value"),Object(n.b)("p",null,"You can get the value of TimePicker either as an object or as a string via the ",Object(n.b)("a",{parentName:"p",href:"/timepicker/api/timepicker_getvalue_method"},"getValue()")," method. It takes one parameter: "),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",null,"asObject")," - (*boolean*) optional, specifies that the value will be returned as an object, false by default")),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'// return value as a string in the 24-hour format\nvar val1 = timepicker.getValue(); // -> "00:39"\n\n// return value as an object in the 24-hour format\nvar val2 = timepicker.getValue(true);// -> {hour: 0, minute: 39}\n\n// return value as a string in the 12-hour format\nvar val3 = timepicker2.getValue(); // -> "06:00AM"\n\n// return value as an object in the 12-hour format\nvar val4 = timepicker2.getValue(true); // -> {hour: 6, minute: 0, AM: true}\n')),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/k4atpgnd"},"https://snippet.dhtmlx.com/k4atpgnd"),"\tTimepicker. Get Timepicker Value"),Object(n.b)("p",null,"The returned value can be of several types, depending on the passed parameter and the applied time format:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},'for the 24-hour format a return string value will include just the hour and minutes: "00:39"'),Object(n.b)("li",{parentName:"ul"},'for the 12-hour format a return string value will include hour, minutes, and am/pm identifiers: "06:00AM"'),Object(n.b)("li",{parentName:"ul"},"for the 24-hour format a return object value will contain key:value pairs for hours, minutes and their values"),Object(n.b)("li",{parentName:"ul"},"for the 12-hour format a return object value will contain key:value pairs for hours, minutes, am/pm identifiers and their values")))}s.isMDXComponent=!0}}]);