(window.webpackJsonp=window.webpackJsonp||[]).push([[371],{430:function(n,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return r})),o.d(t,"metadata",(function(){return s})),o.d(t,"rightToc",(function(){return b})),o.d(t,"default",(function(){return d}));var e=o(2),i=o(6),a=(o(0),o(1808)),r={sidebar_label:"iconButton Control",title:"iconButton Control"},s={unversionedId:"ribbon/icon_button",id:"ribbon/icon_button",isDocsHomePage:!1,title:"iconButton Control",description:"`tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?`",source:"@site/docs/ribbon/icon_button.md",slug:"/ribbon/icon_button",permalink:"/ribbon/icon_button",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/ribbon/icon_button.md",version:"current",sidebar_label:"iconButton Control"},b=[],c={rightToc:b};function d(n){var t=n.components,o=Object(i.a)(n,["components"]);return Object(a.b)("wrapper",Object(e.a)({},c,o,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?")," "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},'\nThis is a button with an icon. It does not have a caption unlike ribbon/button.md, but can also have a badge with a number and can be _twoState_.\n\n![DHX Ribbon iconButton](../assets/ribbon/icon_button.png)\n\n## Creating IconButton\n\n~~~js\n{\n    type: "iconButton",\n    icon: "dxi-bell-outline"\n}\n~~~\n\n{{sample\ndhtmlxRibbon/samples/03_ribbon/01_init.html\n}}\n\n## Attributes\n\nYou can provide the following attributes in the configuration object of iconButton:\n\n- <strong>id</strong> (string|number) - optional, the ID of the button;\n- <strong>type</strong> (string) - always "iconButton";\n- <strong>icon</strong> (string) - the name of the icon;\n- <strong>count</strong> (number|string) - optional, adds a badge with a number or any symbol (badge is round and doesn\'t expand);\n- <strong>$hidden</strong> (boolean) - optional, hides the control;\n- <strong>twoState</strong> (boolean) - optional, defines whether the button has two states (active/inactive);\n- <strong>active</strong> (boolean) - optional, for two-state buttons, if true, the button is in the active state;\n- <strong>css</strong> (string) - optional, adds a custom CSS class.\n\n## Adding IconButtons\n\nIconButton can be easily added to a ribbon with the help of the [add()]() method of TreeCollection:\n\n~~~js\nmyRibbon.data.add({\n    type: "iconButton",\n    icon: "dxi-bell-outline"\n},-1,"blockId");\n~~~\n\n## Working with IconButton\n\nJust like ribbon/button.md, iconButton can be hidden and disabled. You can also manipulate the states of a twoState iconButton.\n\n\nshall I repeat the text from Button about hide, disable, tooltip and twoState, or a simple link (as it is now) will do? no tooltips for ribbon?\n\n')))}d.isMDXComponent=!0}}]);