(window.webpackJsonp=window.webpackJsonp||[]).push([[1196],{1255:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return o})),l.d(t,"metadata",(function(){return c})),l.d(t,"rightToc",(function(){return i})),l.d(t,"default",(function(){return u}));var n=l(2),b=l(6),a=(l(0),l(1808)),o={sidebar_label:"ComboBox API",title:"ComboBox API"},c={unversionedId:"combobox/temp_api_combo",id:"combobox/temp_api_combo",isDocsHomePage:!1,title:"ComboBox API",description:"`tododelete`",source:"@site/docs/combobox/temp_api_combo.md",slug:"/combobox/temp_api_combo",permalink:"/combobox/temp_api_combo",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/combobox/temp_api_combo.md",version:"current",sidebar_label:"ComboBox API"},i=[{value:"Constructor",id:"constructor",children:[]},{value:"Methods",id:"methods",children:[{value:"disable",id:"disable",children:[]},{value:"enable",id:"enable",children:[]},{value:"paint",id:"paint",children:[]},{value:"clear",id:"clear",children:[]},{value:"focus",id:"focus",children:[]},{value:"setState",id:"setstate",children:[]},{value:"setValue",id:"setvalue",children:[]},{value:"destructor",id:"destructor",children:[]}]},{value:"Properties",id:"properties",children:[{value:"readonly",id:"readonly",children:[]},{value:"disabled",id:"disabled",children:[]},{value:"template",id:"template",children:[]},{value:"multiselection",id:"multiselection",children:[]},{value:"label",id:"label",children:[]},{value:"labelInline",id:"labelinline",children:[]},{value:"labelWidth",id:"labelwidth",children:[]},{value:"placeholder",id:"placeholder",children:[]},{value:"selectAllButton",id:"selectallbutton",children:[]},{value:"showItemsCount",id:"showitemscount",children:[]},{value:"cellHeight",id:"cellheight",children:[]},{value:"listHeight",id:"listheight",children:[]},{value:"virtual",id:"virtual",children:[]},{value:"required",id:"required",children:[]},{value:"hiddenLabel",id:"hiddenlabel",children:[]}]},{value:"Events",id:"events",children:[{value:"Change",id:"change",children:[]},{value:"Open",id:"open",children:[]},{value:"Close",id:"close",children:[]}]}],r={rightToc:i};function u(e){var t=e.components,l=Object(b.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},r,l,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"tododelete")," "),Object(a.b)("h2",{id:"constructor"},"Constructor"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container",{\n    listHeight: 220,\n    cellHeight: 30\n});\n')),Object(a.b)("p",null,"Parameters:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"the HTML container of dhtmlxComboBox"),Object(a.b)("li",{parentName:"ul"},"configuration settings (check below)")),Object(a.b)("h2",{id:"methods"},"Methods"),Object(a.b)("h3",{id:"disable"},"disable"),Object(a.b)("p",null,"disables ComboBox on a page"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"combo.disable();\n")),Object(a.b)("h3",{id:"enable"},"enable"),Object(a.b)("p",null,"enables a disabled ComboBox"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"combo.enable();\n")),Object(a.b)("h3",{id:"paint"},"paint"),Object(a.b)("p",null,"repaints a Combo Box"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"combo.config.disabled = true;\n// repaints Combo with a new config\ncombo.paint();\n")),Object(a.b)("h3",{id:"clear"},"clear"),Object(a.b)("p",null,"clears the value set in the Combo Box"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"combo.clear();\n")),Object(a.b)("h3",{id:"focus"},"focus"),Object(a.b)("p",null,"sets focus in the input without opening a popup with options"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"combo.focus();\n")),Object(a.b)("h3",{id:"setstate"},"setState"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"sets the state of ComboBox, used for validation"),Object(a.b)("li",{parentName:"ul"},"param:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},'state    string      the state of Combo Box:"default"|"error"|"success"')))),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'combo.setState("success");\n')),Object(a.b)("p",null,'Depending on the set state the input of Combo Box gets a colored border: green for "success", red for "error".'),Object(a.b)("h3",{id:"getvalue"}," getValue "),Object(a.b)("p",null,"gets id(s) of items from data collection selected in ComboBox"),Object(a.b)("p",null,"param:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"asArray   boolean   true, to return ids as an array of strings")),Object(a.b)("p",null,"returns:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"values     string|array    id(s) of options selected in Combo Box")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var id = combo.getValue();\n// -> "u1556098582074"\n\n// returns ids of selected options as strings\nvar ids = combo.getValue();\n// -> "u1556097609214,u1556097609228,u1556097609244"\n\n// returns ids of selected options as an array of strings\nvar array_ids = combo.getValue(true);\n// -> ["u1556097609214", "u1556097609228", "u1556097609244"]\n')),Object(a.b)("h3",{id:"setvalue"},"setValue"),Object(a.b)("p",null,"selects option(s) in ComboBox"),Object(a.b)("p",null,"param:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"ids     string|array    the ids of items from data collection that should be selected in Combo Box")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"// select one option\ncombo.setValue(combo.data.getId(1));\n\n// selects several options at once\ncombo.setValue([combo.data.getId(1), combo.data.getId(3)]);\n")),Object(a.b)("h3",{id:"destructor"},"destructor"),Object(a.b)("p",null,"releases occupied resources\n:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"combo.destructor();\n")),Object(a.b)("h2",{id:"properties"},"Properties"),Object(a.b)("h3",{id:"readonly"},"readonly"),Object(a.b)("p",null,"makes Combo Box readonly"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"default: false"),Object(a.b)("li",{parentName:"ul"},"type: boolean "),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", { \n    readonly:true\n});\n')),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"descr: In this mode it is only possible to select options from the list, without entering words in the input.")),Object(a.b)("h3",{id:"disabled"},"disabled"),Object(a.b)("p",null,"makes Combo Box disabled"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"default: false"),Object(a.b)("li",{parentName:"ul"},"type: boolean "),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", { \n    disabled:true\n});\n')),Object(a.b)("h3",{id:"template"},"template"),Object(a.b)("p",null,"sets a template of displaying options in the popup list"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: function "),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", {\n    template: function (item) {\n      return "<div style=\'display:inline-block\'>"\n      +"<img style=\'width:20px;height:20px;margin-right:10px;\' src="+item.src+"/></div>" \n      + item.value + "</div>";\n    }\n});         \n')),Object(a.b)("p",null,"The ",Object(a.b)("strong",null,"template")," function takes as a parameter an item of data collection and should return a string with a template for rendering options in the list."),Object(a.b)("h3",{id:"customfilter"},"customFilter"),Object(a.b)("p",null,"sets a custom function for filtering Combo Box options"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: function"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'function mySearch(item, target) {\n    // your filtering logic here            \n}\nvar combo = new dhx.Combobox("combo_container", {\n    customFilter: mySearch\n});\n')),Object(a.b)("p",null,"The filtering function takes two parameters:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"item\t\t\tobject\t\t\tan item of data collection"),Object(a.b)("li",{parentName:"ul"},"target\t\tstring\t\t\tthe string to compare to")),Object(a.b)("p",null,"and should return ",Object(a.b)("em",{parentName:"p"},"true/false")," to specify whether an item should be displayed in the filtered list of options."),Object(a.b)("h3",{id:"multiselection"},"multiselection"),Object(a.b)("p",null,"enables selection of multiple options in ComboBox"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: boolean"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", {\n    multiselection:true\n});\n')),Object(a.b)("h3",{id:"label"},"label"),Object(a.b)("p",null,"adds a label for ComboBox"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: string"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", {\n    label:"My Combo label"\n});\n')),Object(a.b)("h3",{id:"labelinline"},"labelInline"),Object(a.b)("p",null,"defines whether a label will be placed in one line with ComboBox"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: boolean"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", {\n    labelInline:true\n});\n')),Object(a.b)("h3",{id:"labelwidth"},"labelWidth"),Object(a.b)("p",null,"sets the width of a label"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: string"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", {\n    labelWidth:100\n});\n')),Object(a.b)("h3",{id:"placeholder"},"placeholder"),Object(a.b)("p",null,"sets a placeholder in the input of Combo"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: string"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container",{\n    placeholder: "Some placeholder"\n});\n')),Object(a.b)("h3",{id:"selectallbutton"},"selectAllButton"),Object(a.b)("p",null,"defines whether the Select All button should be shown"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: boolean"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", {\n    // enables multiple selection of options\n    multiselection:true,\n    // shows the Select All button\n    selectAllButton: true\n});\n')),Object(a.b)("p",null,"Note that to select several options you need to enable the ",Object(a.b)("strong",null,"multiselection")," option."),Object(a.b)("h3",{id:"showitemscount"},"showItemsCount"),Object(a.b)("p",null,"shows the total number of selected options "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: boolean|function"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container", {\n    multiselection: true,\n    showItemsCount: function (num) {\n        return num + (num === 1 ? " item" : " items") + " selected";\n    }\n});\n')),Object(a.b)("p",null,"As a function takes one parameter:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"count\t\tnumber\t\tthe number of options")),Object(a.b)("p",null,"and should return a template for displaying a result."),Object(a.b)("p",null,"Note that to select several options you need to enable the ",Object(a.b)("strong",null,"multiselection")," option."),Object(a.b)("h3",{id:"cellheight"},"cellHeight"),Object(a.b)("p",null,"sets the height of a cell in the list of options"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: number"),Object(a.b)("li",{parentName:"ul"},"default: 32"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container",{\n    cellHeight:50\n});\n')),Object(a.b)("h3",{id:"listheight"},"listHeight"),Object(a.b)("p",null,"sets the height of the list of options"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type: number"),Object(a.b)("li",{parentName:"ul"},"default: 224"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container",{\n    listHeight:50\n});\n')),Object(a.b)("h3",{id:"virtual"},"virtual"),Object(a.b)("p",null,"enables dynamic loading of data on scrolling the list of options"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type:boolean;"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container",{\n    virtual:true\n});\n')),Object(a.b)("h3",{id:"required"},"required"),Object(a.b)("p",null,"defines whether the field with Combo box is required (for a form)"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type:boolean;"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container",{\n    label:"My Combo",\n    required:true\n});\n')),Object(a.b)("h3",{id:"hiddenlabel"},"hiddenLabel"),Object(a.b)("p",null,"adds a hidden label for a Combo box input that will be used while sending a form to the server"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"type:boolean"),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var combo = new dhx.Combobox("combo_container",{\n    hiddenLabel:true\n});\n')),Object(a.b)("h2",{id:"events"},"Events"),Object(a.b)("h3",{id:"change"},"Change"),Object(a.b)("p",null,"fires when a new option is selected"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"params:",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"id\tstring\t\tthe id of a newly selected option"))),Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'combo.events.on("Change", function(id){\n    // your logic here\n});\n')),Object(a.b)("h3",{id:"open"},"Open"),Object(a.b)("p",null,"fires when a list with options is opened"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'combo.events.on("Open", function(){\n    // your logic here\n});\n')),Object(a.b)("h3",{id:"close"},"Close"),Object(a.b)("p",null,"fires when a list with options is closed"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"example:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'combo.events.on("Close", function(){\n    // your logic here\n});\n')))}u.isMDXComponent=!0}}]);