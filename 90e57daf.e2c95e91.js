(window.webpackJsonp=window.webpackJsonp||[]).push([[961],{1020:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return r})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return o}));var b=a(2),n=a(6),l=(a(0),a(1808)),c={sidebar_label:"Tabbar API",title:"Tabbar API"},r={unversionedId:"tabbar/api",id:"tabbar/api",isDocsHomePage:!1,title:"Tabbar API",description:"`tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?`",source:"@site/docs/tabbar/api.md",slug:"/tabbar/api",permalink:"/tabbar/api",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/tabbar/api.md",version:"current",sidebar_label:"Tabbar API"},i=[{value:"Constructor",id:"constructor",children:[]},{value:"Methods",id:"methods",children:[{value:"addCell",id:"addcell",children:[]},{value:"removeCell",id:"removecell",children:[]},{value:"getId",id:"getid",children:[]},{value:"setActive",id:"setactive",children:[]},{value:"getActive",id:"getactive",children:[]},{value:"destructor",id:"destructor",children:[]}]},{value:"Properties",id:"properties",children:[{value:"mode",id:"mode",children:[]},{value:"closeButtons",id:"closebuttons",children:[]},{value:"noContent",id:"nocontent",children:[]},{value:"tabWidth",id:"tabwidth",children:[]},{value:"tabHeight",id:"tabheight",children:[]},{value:"views",id:"views",children:[]}]},{value:"Events",id:"events",children:[{value:"Change",id:"change",children:[]},{value:"Close",id:"close",children:[]}]}],s={rightToc:i};function o(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(b.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?")," "),Object(l.b)("h2",{id:"constructor"},"Constructor"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    mode: "bottom"\n});\n')),Object(l.b)("p",null,"Parameters:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"the HTML container of dhtmlxTabbar"),Object(l.b)("li",{parentName:"ul"},"configuration settings (check below)")),Object(l.b)("h2",{id:"methods"},"Methods"),Object(l.b)("h3",{id:"addcell"},"addCell"),Object(l.b)("p",null,"adds a new tab into a tabbar"),Object(l.b)("p",null,"params:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"view  -  (object)  an object of a tab. It may include the following properties:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"tab - the name of a tab",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"tabCss - the name of the CSS class used for a tab"))),Object(l.b)("li",{parentName:"ul"},"css - the name of the CSS class used for a cell"),Object(l.b)("li",{parentName:"ul"},"header - the header of a cell\t"))),Object(l.b)("li",{parentName:"ul"},"index -   (number)  the position to add a tab into")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'tabbar.addCell({tab: "tab-" + nextTab++, css:"panel flex"}, 0);\n')),Object(l.b)("h3",{id:"removecell"},"removeCell"),Object(l.b)("p",null,"removes a tab from a tabbar"),Object(l.b)("p",null,"params:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"id      string         the id of a cell to remove")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"var id = tabbar.getId(0);\ntabbar.removeCell(id);\n")),Object(l.b)("h3",{id:"getid"},"getId"),Object(l.b)("p",null,"returns the id of a tab by its index"),Object(l.b)("p",null,"params:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"index    number    the position of a tab in the tabbar")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"var id = tabbar.getId(0);\n")),Object(l.b)("h3",{id:"setactive"},"setActive"),Object(l.b)("p",null,"sets an active tab\nparams:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"id\t- (string)\tthe id of a tab")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    mode: "top",            \n    views:[\n        { id: "1", tab: "tab-1", css:"panel flex"},\n        { id: "2", tab: "tab-2", css:"panel flex"},\n        { id: "3", tab: "tab-3", css:"panel flex"},\n        { id: "4", tab: "tab-4", css:"panel flex"}\n    ]\n});\n \ntabbar.setActive("2");\n')),Object(l.b)("h3",{id:"getactive"},"getActive"),Object(l.b)("p",null,"gets the id of the active tab"),Object(l.b)("p",null,"returns:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"id -\t(string)\tthe id of the active tab")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    mode: "top",            \n    views:[\n        { id: "1", tab: "tab-1", css:"panel flex"},\n        { id: "2", tab: "tab-2", css:"panel flex"},\n        { id: "3", tab: "tab-3", css:"panel flex"},\n        { id: "4", tab: "tab-4", css:"panel flex"}\n    ]\n});\n \nvar active = tabbar.getActive(); // -> "2"\n')),Object(l.b)("h3",{id:"destructor"},"destructor"),Object(l.b)("p",null,"releases occupied resources"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"tabbar.destructor();\n")),Object(l.b)("h2",{id:"properties"},"Properties"),Object(l.b)("h3",{id:"mode"},"mode"),Object(l.b)("p",null,"specifies the mode of displaying a tabbar"),Object(l.b)("p",null,"type:string"),Object(l.b)("p",null,'values: "top"|"bottom"|"left"|"right"'),Object(l.b)("p",null,'default:"top"'),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    mode: "bottom"\n});\n')),Object(l.b)("h3",{id:"closebuttons"},"closeButtons"),Object(l.b)("p",null,"adds close buttons for tabs"),Object(l.b)("p",null,"type:boolean"),Object(l.b)("p",null,"default: false"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    closeButtons:true\n});\n')),Object(l.b)("h3",{id:"nocontent"},"noContent"),Object(l.b)("p",null,"defines whether tabs contain any content"),Object(l.b)("p",null,"type:boolean"),Object(l.b)("p",null,"default: false"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    noContent:true\n});\n')),Object(l.b)("h3",{id:"tabwidth"},"tabWidth"),Object(l.b)("p",null,"sets the width of a tab"),Object(l.b)("p",null,"type:number"),Object(l.b)("p",null,"default:150"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    tabWidth: 120\n});\n')),Object(l.b)("h3",{id:"tabheight"},"tabHeight"),Object(l.b)("p",null,"sets the height of a tab"),Object(l.b)("p",null,"type:number"),Object(l.b)("p",null,"default:45"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    tabHeight: 50\n});\n')),Object(l.b)("h3",{id:"views"},"views"),Object(l.b)("p",null,"defines the configuration of tabs"),Object(l.b)("p",null,"type: array"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var tabbar = new dhx.Tabbar("tabbar_container", {\n    views:[\n        { tab: "left", css:"panel flex", header:"Left"},\n        { tab: "west", css:"panel flex", header:"West"},\n        { tab: "east", css:"panel flex", header:"East"},\n        { tab: "right", css:"panel flex", header:"Right" }\n    ]\n});\n')),Object(l.b)("p",null,"The views array contains a set of objects that describe configuration of tabs. Each tab object may include the following properties:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"tab - the name of a tab"),Object(l.b)("li",{parentName:"ul"},"tabCss - the name of the CSS class used for a tab"),Object(l.b)("li",{parentName:"ul"},"css - the name of the CSS class used for a cell"),Object(l.b)("li",{parentName:"ul"},"header - the header of a cell\t")),Object(l.b)("h2",{id:"events"},"Events"),Object(l.b)("h3",{id:"change"},"Change"),Object(l.b)("p",null,"fires on changing an active tab"),Object(l.b)("p",null,"params:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"activeId  -  (string)    the id of a newly active tab"),Object(l.b)("li",{parentName:"ul"},"prevId   -   (string)    the id of a previously active tab")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'tabbar.events.on("Change", function(activeId, prevId){\n    console.log(activeId);\n});\n')),Object(l.b)("h3",{id:"close"},"Close"),Object(l.b)("p",null,"fires on closing a tab"),Object(l.b)("p",null,"params:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"id   -  (string)   the id of a closed tab")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'tabbar.events.on("Close", function(id){\n    console.log(id);\n});\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"add Layout API, since Tabbar inherits it",Object(l.b)("br",null)),Object(l.b)("li",{parentName:"ul"},"recheck descriptions of configs",Object(l.b)("br",null))))}o.isMDXComponent=!0}}]);