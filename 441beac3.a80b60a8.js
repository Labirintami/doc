(window.webpackJsonp=window.webpackJsonp||[]).push([[475],{1982:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/styling_grid-8af7110f45baccdf95cb807522ab19b9.png"},1983:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/styling_header-e85cd6be39b126d62d6841b176414d7f.png"},1984:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/rowcss-ad8e58295333011332801da294e52058.png"},1985:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/cellcss-11a3755fae1fc0b9867efb3c70e20d92.png"},1986:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/markcells-e15e02005254a09f478a799152f3e687.png"},1987:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/mark_cell-5d0f45d9ecc7f11d111ced02169a90c9.png"},1988:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/cell_templates-28ecf862777ea2c6bfdb52178c963bd4.png"},534:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return r}));var l=n(2),a=n(6),c=(n(0),n(1808)),s={sidebar_label:"Customization",title:"Customization",description:null},b={unversionedId:"grid/customization",id:"grid/customization",isDocsHomePage:!1,title:"Customization",description:"Styling grid",source:"@site/docs/grid/customization.md",slug:"/grid/customization",permalink:"/grid/customization",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/grid/customization.md",version:"current",sidebar_label:"Customization",sidebar:"docs",previous:{title:"Work with Selection Object",permalink:"/grid/usage_selection"},next:{title:"Event Handling",permalink:"/grid/events"}},i=[{value:"Styling grid",id:"styling-grid",children:[]},{value:"Styling header cells",id:"styling-header-cells",children:[]},{value:"Styling footer cells",id:"styling-footer-cells",children:[]},{value:"Styling rows",id:"styling-rows",children:[]},{value:"Styling cells",id:"styling-cells",children:[]},{value:"Adding custom marks to cells",id:"adding-custom-marks-to-cells",children:[]},{value:"Adding template to cells",id:"adding-template-to-cells",children:[]}],o={rightToc:i};function r(e){var t=e.components,s=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(l.a)({},o,s,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"styling-grid"},"Styling grid"),Object(c.b)("p",null,"There is a possibility to make changes in the look and feel of a grid. "),Object(c.b)("p",null,Object(c.b)("img",{src:n(1982).default})),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/xs7bixmg"},"https://snippet.dhtmlx.com/xs7bixmg"),"\tGrid. Styling Selection"),Object(c.b)("p",null,"For this you need to take the following steps:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"add a new CSS class(es) with desired settings in the ","<","style",">"," section of your HTML page or in your file with styles (don't forget to include your file on the page in this case)")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"<style>\n    .my-first-class {\n        /*some styles*/\n    }\n    \n    .my-second-class {\n        /*some styles*/\n    }\n</style>\n")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"specify the name of the created CSS class (or names of classes separated by spaces) as the value of the ",Object(c.b)("a",{parentName:"li",href:"/grid/api/grid_css_config"},"css")," property in the Grid configuration:")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var grid = new dhx.Grid({ \n    css:"my-first-class my-second-class"\n});\n')),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/c5tr3s5r"},"https://snippet.dhtmlx.com/c5tr3s5r"),"\tGrid. Styling Grid"),Object(c.b)("h2",{id:"styling-header-cells"},"Styling header cells"),Object(c.b)("p",null,Object(c.b)("img",{src:n(1983).default})),Object(c.b)("p",null,"You can easily set some styling to the text of header cells by applying some inline style or a CSS class to the ",Object(c.b)("strong",null,"text")," property of the header of a column:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-html"},"<style>\n    .title {\n        font-size: 1.2em;\n        color: tomato;\n    }\n    \n</style>\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var grid = new dhx.Grid("grid", {\n    columns: [\n      { width: 200, id: "country", \n        header: [{ text: "<span style=\'font-size:2em\'>Country</span>" }] },\n      { width: 150, id: "population", \n        header: [{ text: "<span className=\'title\'>Population</span>" }] },\n      { width: 150, id: "yearlyChange", header: [{ text: "Yearly Change" }] },\n      { width: 150, id: "netChange", header: [{ text: "Net Change" }] },\n      { width: 150, id: "destiny", header: [{ text: "Density (P/Km\xb2)" }] },\n      { width: 150, id: "area", header: [{ text: "Land Area (Km\xb2)" }] },\n    ],\n    data: dataset\n});\n')),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/7o4elf48"},"https://snippet.dhtmlx.com/7o4elf48"),"\tGrid. Styling Header Cells"),Object(c.b)("h2",{id:"styling-footer-cells"},"Styling footer cells"),Object(c.b)("p",null,"You can easily set some styling to the text of footer cells by applying some inline style or a CSS class to the ",Object(c.b)("strong",null,"text")," property of the footer of a column:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-html"},"<style>     \n    .custom_footer{\n        font-size: 18px;\n        text-decoration: underline;\n    }    \n</style>\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var grid = new dhx.Grid("grid", {\n    columns: [\n      {\n        width: 100, id: "a", header: [{ text: "#" }], footer: [\n            { text: \'<div className="custom_footer">Total</div>\', colspan: 3 },\n            { text: \'<div className="custom_footer">Minimal value</div>\', colspan: 3 }\n        ]\n      },\n      { width: 100, id: "b", header: [{ text: "Title" }] },\n      { width: 200, id: "c", header: [{ text: "Order" }] },\n      { width: 200, id: "d", header: [{ text: "Price" }], footer: [\n            { content: "sum" }, { content: "min" }        \n        ] \n      }\n    ],\n    data: dataset\n});\n')),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/d254hcvp"},"https://snippet.dhtmlx.com/d254hcvp"),"\tGrid. Styling Footer Cells"),Object(c.b)("h2",{id:"styling-rows"},"Styling rows"),Object(c.b)("p",null,Object(c.b)("img",{src:n(1984).default})),Object(c.b)("p",null,"It is possible to change the appearance of grid rows by applying custom CSS styles to them. There are two ways to do it:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"via the ",Object(c.b)("strong",null,"rowCss")," property in the configuration of Grid. As a value of property set a function that takes the id of a row as a parameter and returns a string with the name of a CSS class.")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-html"},"<style>\n.my_custom_row {\n    background: coral;\n}\n</style>\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var grid = new dhx.Grid("grid", {\n    columns: [// columns config],\n    rowCss: function (row) { return row.custom ? "my_custom_row" : "" }, /*!*/\n    data: dataset\n});\n')),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/2dxtwf9n"},"https://snippet.dhtmlx.com/2dxtwf9n"),"\tGrid. Custom Row Style"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"with the help of the ",Object(c.b)("strong",null,"addRowCss()")," method:")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-html"},"<style>\n    .myCustomClass{\n        background:greenyellow;\n    }\n</style>\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var rowId = grid.data.getId(1);\ngrid.addRowCss(rowId, "myCustomClass"); /*!*/\n')),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/idvmge2d"},"https://snippet.dhtmlx.com/idvmge2d"),"\tGrid. Add Row Css"),Object(c.b)("p",null,"where:"),Object(c.b)("table",{className:"webixdoc_links"},Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"rowId")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string,number"),") the id of a row")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"css")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string"),") the name of a CSS class")))),Object(c.b)("h2",{id:"styling-cells"},"Styling cells"),Object(c.b)("p",null,Object(c.b)("img",{src:n(1985).default})),Object(c.b)("p",null,"It is easy to style necessary cells using the ",Object(c.b)("strong",null,"addCellCss()")," method. It takes three parameters:"),Object(c.b)("table",{className:"webixdoc_links"},Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"row")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string,number"),") the id of a row")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"col")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string,number"),") the id of a column")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"css")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string"),") the name of the CSS class")))),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-html"},"<style>\n.myCustomClass{\n    background:greenyellow;\n}\n</style>\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'grid.addCellCss(rowId, "netChange", "myCustomClass");\n')),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/hskmp8rh"},"https://snippet.dhtmlx.com/hskmp8rh"),"\tGrid. Add Cell Css"),Object(c.b)("h2",{id:"adding-custom-marks-to-cells"},"Adding custom marks to cells"),Object(c.b)("p",null,Object(c.b)("img",{src:n(1986).default})),Object(c.b)("p",null,"You can mark particular cells in a grid using the ",Object(c.b)("strong",null,"mark")," property of a column configuration. You need to set its value as a function that takes the following parameters:"),Object(c.b)("table",{className:"webixdoc_links"},Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"cell")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string"),") the value of a cell")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"columnCells")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"array"),") an array of all cell values in the specified column")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"row")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"object"),") an object with all cells in a row")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"col")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"object"),") the config of a column (see the columns config)")))),Object(c.b)("p",null,"The function should return a string with a custom CSS class for your mark."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-html"},"<style>\n    .my_custom_mark {\n        background: lightcoral;\n    }\n    \n    .total_col {\n        background: #f2f2f2;\n    }\n</style>\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var grid = new dhx.Grid("grid", {\n    columns: [\n        {\n            width: 150, id: "population", header: [{ text: "Population" }],\n            // marks specified cells in a column\n            mark: function (cell, data, row, col) { /*!*/\n                return cell > 100000000 ? "my_custom_mark" : "" /*!*/\n            }\n        }, \n        {\n            width: 150, id: "destiny", header: [{ text: "Density (P/Km\xb2)" }],\n            // marks all cells in a column\n            mark: function (cell, data) { return "total_col"; } /*!*/\n        },\n    ],\n    data: dataset\n});\n')),Object(c.b)("p",null,"{{sample grid/02_configuration/05_custom_marks.html}}"),Object(c.b)("p",null,"It is also possible to highlight cells with minimum and (or) maximum values in a grid using the ",Object(c.b)("strong",null,"mark")," property of a column configuration. The property is an object which takes two optional parameters:"),Object(c.b)("table",{className:"webixdoc_links"},Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"min")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string"),") a custom CSS class to mark a cell that contains the minimum value")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"max")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"string"),") a custom CSS class to mark a cell that contains the maximum value")))),Object(c.b)("br",null),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-html"},"<style>\n    .max_cell {\n        background: #f44336;\n        color: #FFF;\n    }\n\n    .min_cell {\n        background: #4CAF50;\n        color: #FFF\n    }\n</style>\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var grid = new dhx.Grid("grid", {\n    columns: [\n        { width: 200, id: "country", header: [{ text: "Country" }] },\n        {\n            width: 150, id: "population", header: [{ text: "Population" }],\n            mark: {\n                min: "min_cell", /*!*/\n                max: "max_cell" /*!*/\n            }\n        },\n        // more options\n    ],\n    data: dataset\n});\n')),Object(c.b)("p",null,Object(c.b)("img",{src:n(1987).default})),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/buirf16n"},"https://snippet.dhtmlx.com/buirf16n"),"\tGrid. Mark Cells"),Object(c.b)("h2",{id:"adding-template-to-cells"},"Adding template to cells"),Object(c.b)("p",null,Object(c.b)("img",{src:n(1988).default})),Object(c.b)("p",null,"It is possible to customize the content of cells of Grid via the ",Object(c.b)("strong",null,"template")," property of a ",Object(c.b)("a",{parentName:"p",href:"/grid/configuration#columns"},"column configuration"),". The template option is a function that takes three parameters:"),Object(c.b)("table",{className:"webixdoc_links"},Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"cellValue")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"any"),") the value of a cell")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"row")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"object"),") an object with all cells in a row")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("b",null,"col")),Object(c.b)("td",null,"(",Object(c.b)("i",null,"object"),") the config of a column")))),Object(c.b)("br",null),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'var grid = new dhx.Grid("grid", {\n    columns: [\n        { width: 200, id: "country", header: [{text: "Country"}] },\n        { width: 150, id: "population", header: [{text: "Population"}] },\n        { width: 150, id: "netChange", header: [{text: "Net Change"}],\n          htmlEnable: true,\n          template: function (text, row, col) { /*!*/\n            return "<input type=\\"checkbox\\" " + (text /> 300000 ? "checked": "")  + ">"; /*!*/\n          }\n        }\n    ],\n    data: dataset\n});\n')),Object(c.b)("p",null,Object(c.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/9txizaow"},"https://snippet.dhtmlx.com/9txizaow"),"\tGrid. Cell Templates"),Object(c.b)("h3",{id:"eventhandling"},"Event handlers for the template"),Object(c.b)("p",null,"Starting from v7.0, you can assign event handlers to HTML elements of a custom template of Grid cells via using the grid/api/grid_eventhandlers_config.md configuration property of Grid, for instance:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},'const grid = new dhx.Grid("grid", {\n    columns: [\n        { width: 200, id: "country", header: [{ text: "Country" }], htmlEnable: true },\n        { width: 150, id: "netChange", header: [{text: "Net Change"}],\n            htmlEnable: true,\n            tooltip: false,\n            template: function (text, row, col) { /*!*/\n                return "<div className=\'cell__template\'><input type=\'checkbox\'  /*!*/\n                    disabled " + (text > 3000000 ? "checked" : "") + " ></div>"; /*!*/\n            } /*!*/\n        },\n        // more options\n    ],\n    data: data,\n    eventHandlers: { /*!*/\n        onmouseover: { /*!*/\n            cell__template: function(event, data) { /*!*/\n                display(JSON.stringify(data.row, null, 2)); /*!*/\n            } /*!*/\n        } /*!*/\n    } /*!*/\n});\n')),Object(c.b)("p",null,"{{sample grid/02_configuration/25_template_events.html}}"),Object(c.b)("p",null,"The ",Object(c.b)("strong",null,"eventHandlers")," object includes a set of ",Object(c.b)("em",{parentName:"p"},"key:value")," pairs, where:"),Object(c.b)("table",{className:"webixdoc_links"},Object(c.b)("tbody",null,Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("i",null,"key")),Object(c.b)("td",null," the name of the event. Note, that at the beginning of the event name the ",Object(c.b)("b",null,"'on'")," prefix is used (onclick, onmouseover).")),Object(c.b)("tr",null,Object(c.b)("td",{className:"webixdoc_links0"},Object(c.b)("i",null,"value")),Object(c.b)("td",null,"an object that contains a ",Object(c.b)("i",null,"key:value")," pair, where ",Object(c.b)("i",null,"key")," is the css class name that the handler will be applied to and ",Object(c.b)("i",null,"value")," is a function that takes two parameters:",Object(c.b)("ul",null,Object(c.b)("li",null,Object(c.b)("b",null,"event")," - an event object"),Object(c.b)("li",null,Object(c.b)("b",null,"object")," - an object with two attributes:",Object(c.b)("ol",null,"- ",Object(c.b)("b",null,"row")," - an object with a row configuration"),Object(c.b)("ol",null,"- ",Object(c.b)("b",null,"column")," - an object with a column configuration"))))))))}r.isMDXComponent=!0}}]);