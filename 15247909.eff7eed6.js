(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{206:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return u})),a.d(t,"default",(function(){return s}));var r=a(2),n=a(6),i=(a(0),a(1808)),l={sidebar_label:"TimePicker API",title:"TimePicker API"},c={unversionedId:"timepicker/temp_api_timepicker",id:"timepicker/temp_api_timepicker",isDocsHomePage:!1,title:"TimePicker API",description:"`tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?`",source:"@site/docs/timepicker/temp_api_timepicker.md",slug:"/timepicker/temp_api_timepicker",permalink:"/timepicker/temp_api_timepicker",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/timepicker/temp_api_timepicker.md",version:"current",sidebar_label:"TimePicker API"},u=[{value:"Constructor",id:"constructor",children:[]},{value:"Methods",id:"methods",children:[{value:"getValue",id:"getvalue",children:[]},{value:"setValue",id:"setvalue",children:[]}]},{value:"Events",id:"events",children:[{value:"Save",id:"save",children:[]},{value:"Close",id:"close",children:[]}]},{value:"Properties",id:"properties",children:[{value:"css",id:"css",children:[]},{value:"timeFormat",id:"timeformat",children:[]},{value:"actions",id:"actions",children:[]}]}],b={rightToc:u};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?")," "),Object(i.b)("h2",{id:"constructor"},"Constructor"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'var timepicker = new dhx.Timepicker("timepicker_container",{\n    timeFormat:12, \n    actions:true\n});\n')),Object(i.b)("p",null,"Parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"the HTML container of dhtmlxTimePicker"),Object(i.b)("li",{parentName:"ul"},"configuration settings (check below)")),Object(i.b)("h2",{id:"methods"},"Methods"),Object(i.b)("h3",{id:"getvalue"},"getValue"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: returns the current value of a TimePicker"),Object(i.b)("li",{parentName:"ul"},"params: ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",null,"asObject")," - (*boolean*) optional, specifies that the value will be returned as an object, false by default"))),Object(i.b)("li",{parentName:"ul"},"returns:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",null,"value")," - (*string|object*) the value of a timepicker"))),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'// return value as a string in the 24-hour format\nvar val1 = timepicker.getValue(); // -> "00:39"\n\n// return value as an object in the 24-hour format\nvar val2 = timepicker.getValue(true);// -> {hour: 0, minute: 39}\n\n// return value as a string in the 12-hour format\nvar val3 = timepicker2.getValue(); // -> "06:00AM"\n\n// return value as an object in the 12-hour format\nvar val4 = timepicker2.getValue(true); // -> {hour: 6, minute: 0, AM: true}\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"descr:\nThe returned value can be of several types, depending on the passed parameter and the applied time format:",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},'- for the 24-hour format a return string value will include just the hour and minutes: "00:39"\n- for the 12-hour format a return string value will include hour, minutes, and am/pm identifiers: "06:00AM"\n- for the 24-hour format a return object value will contain key:value pairs for hours, minutes and their values\n- for the 12-hour format a return object value will contain key:value pairs for hours, minutes, am/pm identifiers and their values\n')))),Object(i.b)("h3",{id:"setvalue"},"setValue"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: sets value for a TimePicker"),Object(i.b)("li",{parentName:"ul"},"params:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",null,"value")," - (*Date|string|array*) the value to be set for a timepicker"))),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'// set the value as a string\ntimepicker.setValue("00:39");\n\n// set the value as a Date object\ntimepicker.setValue(new Date(\'January 10, 2019 17:54:00\'));\n\n// set the value as an array\ntimepicker.setValue([6,20,"AM"]);\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"descr:\nThe value of timepicker set as an array should have the following elements:",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},'- the hour value\n- the minutes value\n- the "AM/PM" identifier for 12-hour format as a string\n')))),Object(i.b)("h2",{id:"events"},"Events"),Object(i.b)("p",null,"###Change"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: fires on change of the timepicker value"),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'timepicker.events.on("Change", function(){\n    console.log("The value of a timepicker has changed to "+timepicker.getValue());\n});\n')),Object(i.b)("h3",{id:"save"},"Save"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: fires on saving the timepicker value"),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'timepicker.events.on("Save", function(){\n    console.log("The value of a timepicker "+timepicker.getValue()+ " has been saved");\n});\n')),Object(i.b)("h3",{id:"close"},"Close"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: fires on closing the timepicker "),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'timepicker.events.on("Close", function(){\n    console.log("The Close button has been clicked");\n});\n')),Object(i.b)("h2",{id:"properties"},"Properties"),Object(i.b)("h3",{id:"css"},"css"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: adds style classes to TimePicker"),Object(i.b)("li",{parentName:"ul"},"type: string"),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'<style>\n    .bg-grey {\n        background: #efefef;\n    }\n</style>\n\n\nvar timepicker = new dhx.Timepicker("timepicker", {\n    css: "dhx_timepicker--bordered bg-grey"\n});\n')),Object(i.b)("h3",{id:"timeformat"},"timeFormat"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: defines what clock format is activated: the 12-hour or 24-hour one"),Object(i.b)("li",{parentName:"ul"},"default: 24"),Object(i.b)("li",{parentName:"ul"},"type: number"),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'var timepicker = new dhx.Timepicker("test2", {\n    timeFormat: 12\n});\n')),Object(i.b)("h3",{id:"actions"},"actions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"short: defines whether a timepicker is equipped with the Close and Save buttons"),Object(i.b)("li",{parentName:"ul"},"default: false"),Object(i.b)("li",{parentName:"ul"},"type: boolean"),Object(i.b)("li",{parentName:"ul"},"example:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'var timepicker = new dhx.Timepicker("test2", {\n    actions: true\n});\n')),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"draft, do not remove!")))}s.isMDXComponent=!0}}]);