(window.webpackJsonp=window.webpackJsonp||[]).push([[1375],{1434:function(t,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return d})),a.d(n,"metadata",(function(){return r})),a.d(n,"rightToc",(function(){return m})),a.d(n,"default",(function(){return i}));var e=a(2),p=a(6),o=(a(0),a(1808)),d={sidebar_label:"Attaching Content to Popup",title:"Attaching Content to Popup"},r={unversionedId:"popup/attaching_content",id:"popup/attaching_content",isDocsHomePage:!1,title:"Attaching Content to Popup",description:"`tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?`",source:"@site/docs/popup/attaching_content.md",slug:"/popup/attaching_content",permalink:"/popup/attaching_content",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/popup/attaching_content.md",version:"current",sidebar_label:"Attaching Content to Popup"},m=[],h={rightToc:m};function i(t){var n=t.components,a=Object(p.a)(t,["components"]);return Object(o.b)("wrapper",Object(e.a)({},h,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?")," "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'\ndhtmlxPopup can have various content, such as:\n\n- [DHTMLX components](/popup/attaching_content#attachingdhtmlxcomponents)\n- [an HTML object](/popup/attaching_content#attachinghtmlobjects)\n- [an HTML string](/popup/attaching_content#attachinganhtmlstring)\n- [a list](/popup/attaching_content#attachingalist)\n\nAttaching DHTMLX components\n-----------------------------------------------------------------\nThe table below presents DHTMLX components you can attach to a dhtmlxPopup object and code samples of such attaching.\n\n:::note\nEach attach[NameofComponent] method returns the instance of the related component\n\n:::\n\n<table className="list" cellSpacing="0" cellPadding="5" border="0">\n    <thead>\n    <tr>\n        <th>\n            Component\n        </th>\n        <th>\n            Code Sample\n        </th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td>accordion/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myAcc = myPop.attachAccordion(350, 300);\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/09_attach_accordion.html\n}}\n,  Related API: api/dhtmlxpopup_attachaccordion.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>calendar/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myCalendar = myPop.attachCalendar();\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/05_attach_calendar.html\n}}\n,  Related API: api/dhtmlxpopup_attachcalendar.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>colorpicker/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myCP = myPop.attachColorPicker({ color: "#a4bed4"});\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/12_attach_colorpicker.html\n}}\n,  Related API: api/dhtmlxpopup_attachcolorpicker.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>editor/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myEditor = myPop.attachEditor(400, 200);\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/11_attach_editor.html\n}}\n,  Related API: api/dhtmlxpopup_attacheditor.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>form/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myForm = myPop.attachForm([\n    {type: "input",    label: "Email Address", name: "email"},\n    {type: "password", label: "Password",      name: "pwd"}\n]);\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/04_attach_form.html\n}}\n,  Related API: api/dhtmlxpopup_attachform.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>grid/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myGrid = myPop.attachGrid(350,300);\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/06_attach_grid.html\n}}\n,  Related API: api/dhtmlxpopup_attachgrid.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>layout/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myLayout = myPop.attachLayout(350, 300, "3L");\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/08_attach_layout.html\n}}\n,  Related API: api/dhtmlxpopup_attachlayout.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>tabbar/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myTabbar = myPop.attachTabbar(350, 300);\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/10_attach_tabbar.html\n}}\n,  Related API: api/dhtmlxpopup_attachtabbar.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>tree/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myTree = myPop.attachTree(350,300);\n~~~\n<br/>\n{{sample\ndhtmlxPopup/samples/04_attaches/07_attach_tree.html\n}}\n,  Related API: api/dhtmlxpopup_attachtree.md <br/> <br/>\n       </td>\n    </tr>\n    <tr>\n        <td>vault/index.md</td>\n        <td>\n~~~js\nvar myPop = new dhtmlXPopup(...);\nvar myVault = myPop.attachVault(350, 300, {\n    uploadUrl:  "http://my_mega_server/upload_handler.php",\n    swfUrl:     "http://my_mega_server/upload_handler.php",\n    slUrl:      "http://my_mega_server/upload_handler.php",\n    swfPath:    "dhxvault.swf",\n    slXap:      "dhxvault.xap"\n});\n~~~\n<br/>\nRelated API: api/dhtmlxpopup_attachvault.md <br/> <br/>\n       </td>\n    </tr>\n    </tbody>\n</table>\n\n\nAttaching HTML Objects\n--------------------------------------------\nTo attach a DOM element to a dhtmlxPopup instance, use the api/dhtmlxpopup_attachobject.md method:\n\n~~~html\n<div id="myObj">any custom text here</div>\n\n<script>\n     var myPop = new dhtmlXPopup(...);\n     myPop.attachObject("myObj");\n<\/script>\n~~~\n{{sample\ndhtmlxPopup/samples/04_attaches/02_attach_object.html\n}}\n\nAttaching an HTML string\n-----------------------------------------\nTo add the HTML markup to a dhtmlxPopup instance you should use the api/dhtmlxpopup_attachhtml.md method:\n\n~~~js\nvar myPop = new dhtmlXPopup(...);\nmyPop.attachHTML("any custom text here");\n~~~\n{{sample\ndhtmlxPopup/samples/04_attaches/03_attach_html.html\n}}\n\nAttaching a list\n----------------------------------\n\ndhtmlxPopup provides a handy way to present list-like structures inside it. \n\n![](../assets/list_integration.png)\n\nTo present data in the tabular view you should use the api/dhtmlxpopup_attachlist.md method as in:\n\n~~~js\nvar  myPop = new dhtmlXPopup(...);\nmyPop.attachList("name,price", [\n        {id: 1, name: "Audi A5 Coupe", price: "&euro; 31,550"},\n        {id: 2, name: "Audi A5 Sportback", price: "&euro; 30,990"},\n        myPop.separator, // use this struct for separator\n        {id: 3, name: "Audi A6", price: "&euro; 30,990"},\n        {id: 4, name: "Audi A6 Avant", price: "&euro; 37,450"},\n        {id: 5, name: "Audi A6 Quattro", price: "&euro; 55,360"}\n]);\n~~~\n\nwhere \n\n- <strong>"name, price"</strong> - a comma-separated list of data properties that will be rendered in the list;\n- <strong>[{id:.., name:..., price:...}]</strong> - the data available for rendering in the list;\n- api/dhtmlxpopup_separator_other.md - a special property of dhtmlxPopup that draws a single line. \n\n###Getting list\'s items\n\nTo get the list\'s items, use the api/dhtmlxpopup_getitemdata.md method:\n\n~~~js\nmyPop.attachList("name,price", [\n    {id: 1, name: "Audi A5 Coupe", price: "31550"},\n    {id: 2, name: "Audi A5 Sportback", price: "30990"}\n]);\n\nvar data = myPop.getItemData(1);\n// data = {id: 1, name: "Audi A5 Coupe", price: "31550"}\n~~~\n\nTo get all the items of the list you should call the method with no parameters:\n\n~~~js\nmyPop.attachList("name,price", [\n    {id: 1, name: "Audi A5 Coupe", price: "31550"},\n    {id: 2, name: "Audi A5 Sportback", price: "30990"}\n]);\n\nvar data = myPop.getItemData();\n// data = [\n//     {id: 1, name: "Audi A5 Coupe", price: "31550"},\n//     {id: 2, name: "Audi A5 Sportback", price: "30990"}\n// ]\n~~~\n\n{{sample\ndhtmlxPopup/samples/04_attaches/01_attach_list.html\n}}\n\nClearing the content\n---------------------------------\nTo clear the current content of a pop-up window, use the api/dhtmlxpopup_clear.md method as in:\n\n~~~js\nvar myPop = new dhtmlXPopup( ... );\nmyPop.clear();\n~~~\n\nIf you decide to attach some content over the existing one, note that before attaching the new content dhtmlxPopup will call the clear() method automatically.\n\n')))}i.isMDXComponent=!0}}]);