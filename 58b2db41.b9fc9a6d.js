(window.webpackJsonp=window.webpackJsonp||[]).push([[623],{682:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return m})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return b}));var r=a(2),n=a(6),o=(a(0),a(1808)),i=a(1809),l={sidebar_label:"getValue",title:"getValue"},m={unversionedId:"form/api/form_getvalue_method",id:"form/api/form_getvalue_method",isDocsHomePage:!1,title:"getValue",description:"@short: gets current values/states of controls",source:"@site/docs/form/api/form_getvalue_method.md",slug:"/form/api/form_getvalue_method",permalink:"/form/api/form_getvalue_method",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/form/api/form_getvalue_method.md",version:"current",sidebar_label:"getValue",sidebar:"docs",previous:{title:"getProperties",permalink:"/form/api/form_getproperties_method"},next:{title:"hide",permalink:"/form/api/form_hide_method"}},c=[],u={rightToc:c};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)(i.c,{mdxType:"Short"},"gets current values/states of controls"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"asFormData\tboolean\t\toptional, defines whether values of Form controls should be returned as Form Data")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"state \t\tobject\t\tan object either with the names or IDs of controls (if the name attribute is not defined in the config of the control) and their values/states")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'var state = form.getValue();\n// -> {"name":"John Doe"}\n')),Object(o.b)("p",null," api_method"),Object(o.b)(i.b,{mdxType:"Descr"},Object(o.b)("p",null,"1","."," In case both the name and id of the control are specified in the config of Control, the returned object will contain the name of Control:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'var state = form.getValue();\n// -> {"name":"John Doe"}\n')),Object(o.b)("p",null,"If the name attribute is not specified in the controls config, an object with ID of Control will be returned:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'var state = form.getValue();\n// -> {"id":"John Doe"}\n')),Object(o.b)("p",null,"2","."," Starting with v7.0, for the ",Object(o.b)("strong",null,"TimePicker")," control the type of the returned value depends on the applied ",Object(o.b)("a",{parentName:"p",href:"/form/timepicker#addingtimepicker"},"valueFormat")," and ",Object(o.b)("a",{parentName:"p",href:"/form/timepicker#addingtimepicker"},"timeFormat"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},'valueFormat: "string"'),"  and ",Object(o.b)("em",{parentName:"li"},"timeFormat:24"),' are specified, a return string value will include just the hour and minutes: "00:39"'),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},'valueFormat: "string"'),"  and ",Object(o.b)("em",{parentName:"li"},"timeFormat:12"),' are specified, a return string value will include hour, minutes, and am/pm identifiers: "06:00AM"'),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},'valueFormat: "timeObject"'),"  and ",Object(o.b)("em",{parentName:"li"},"timeFormat:24")," are specified, a return object value will contain key:value pairs for hours, minutes and their values: {hour: 0, minute: 39}"),Object(o.b)("li",{parentName:"ul"},"If ",Object(o.b)("em",{parentName:"li"},'valueFormat: "timeObject"'),"  and ",Object(o.b)("em",{parentName:"li"},"timeFormat:12")," are specified, a return object value will contain key:value pairs for hours, minutes, am/pm identifiers and their values: {hour: 6, minute: 0, AM: true}"))),Object(o.b)("p",null," form/work_with_form.md#gettingvaluesofcontrols"),Object(o.b)("a",{href:"https://snippet.dhtmlx.com/odod5v12",target:"_blank"},"Form. Get Value"),Object(o.b)(i.a,{mdxType:"Changelog"}),Object(o.b)("p",null,"form/api/form_setvalue_method.md"))}b.isMDXComponent=!0}}]);