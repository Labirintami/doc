(window.webpackJsonp=window.webpackJsonp||[]).push([[1397],{1456:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return d})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var i=n(2),a=n(6),r=(n(0),n(1808)),l=n(1809),o={sidebar_label:"eventHandlers",title:"eventHandlers"},d={unversionedId:"treegrid/api/treegrid_eventhandlers_config",id:"treegrid/api/treegrid_eventhandlers_config",isDocsHomePage:!1,title:"eventHandlers",description:"@short: adds event handlers to HTML elements of a custom template of a TreeGrid cell or to the HTML elements defined in the data set of TreeGrid",source:"@site/docs/treegrid/api/treegrid_eventhandlers_config.md",slug:"/treegrid/api/treegrid_eventhandlers_config",permalink:"/treegrid/api/treegrid_eventhandlers_config",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/treegrid/api/treegrid_eventhandlers_config.md",version:"current",sidebar_label:"eventHandlers",sidebar:"docs",previous:{title:"editing",permalink:"/treegrid/api/treegrid_editing_config"},next:{title:"fitToContainer",permalink:"/treegrid/api/treegrid_fittocontainer_config"}},c=[],s={rightToc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)(l.c,{mdxType:"Short"},"adds event handlers to HTML elements of a custom template of a TreeGrid cell or to the HTML elements defined in the data set of TreeGrid"),Object(r.b)(l.d,{mdxType:"Signature"},"eventHandlers?: object;"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},' \n\n// adds event handler to the HTML element of the template of a cell\nconst treeGrid = new dhx.TreeGrid("treegrid", {\n    columns: [\n        { width: 280, id: "name", header: [{ text: "Book Name" }] },\n        {\n            width: 160, id: "price", type: "string", \n            header: [{ text: "Terms and conditions", colspan: 2 }, { text: "Price" }],\n            htmlEnable: true,\n            template: function (text, row, col) { /*!*/\n                return text ? "<div className=\'cell__template\'>$ " + text + "</div>" : ""; /*!*/\n            } /*!*/\n        },\n        // more options\n    ],\n    data: data,\n    eventHandlers: { /*!*/\n        onmouseover: { /*!*/\n            cell__template: function(event, data) { /*!*/\n                display(JSON.stringify(data.row, null, 2)); /*!*/\n            } /*!*/\n        } /*!*/\n    } /*!*/\n});\n')),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"api_config\n")),Object(r.b)(l.b,{mdxType:"Descr"},"The ",Object(r.b)("strong",null,"eventHandlers")," object includes a set of *key:value* pairs, where:",Object(r.b)("table",{className:"webixdoc_links"},Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",{className:"webixdoc_links0"},Object(r.b)("i",null,"key")),Object(r.b)("td",null," the name of the event. Note, that at the beginning of the event name the ",Object(r.b)("b",null,"'on'")," prefix is used (onclick, onmouseover).")),Object(r.b)("tr",null,Object(r.b)("td",{className:"webixdoc_links0"},Object(r.b)("i",null,"value")),Object(r.b)("td",null,"an object that contains a ",Object(r.b)("i",null,"key:value")," pair, where ",Object(r.b)("i",null,"key")," is the css class name that the handler will be applied to and ",Object(r.b)("i",null,"value")," is a function that takes two parameters:",Object(r.b)("ul",null,Object(r.b)("li",null,Object(r.b)("b",null,"event")," - an event object"),Object(r.b)("li",null,Object(r.b)("b",null,"object")," - an object with two attributes:",Object(r.b)("ol",null,"- ",Object(r.b)("b",null,"row")," - an object with a row configuration"),Object(r.b)("ol",null,"- ",Object(r.b)("b",null,"column")," - an object with a column configuration"))))))),Object(r.b)("p",null,"An example of adding event handlers to the HTML elements defined in the data set of TreeGrid is given below:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'const data = [\n    {\n        "name": "A Time to Kill",\n        "price": "12.25",\n        "cover": "Hardcover",\n        "ships": "12 hours",\n        "inStock": "<div className=\'cell__html\'><input type=\'checkbox\' checked />80</div>", /*!*/\n        "parent": "c.1"\n    },\n    // more options\n];\n\nconst grid = new dhx.Grid("grid", {\n    columns: [\n        { \n            width: 160, id: "inStock", type: "string", \n            header: [{ text: "In stock" }], \n            htmlEnable: true \n        }, \n        // more options\n    ],\n    data: data,\n    eventHandlers: { /*!*/\n        onmouseover: { /*!*/\n            cell__html: function(event, data) { /*!*/\n                display(JSON.stringify(data.col, null, 2)); /*!*/\n            } /*!*/\n        } /*!*/\n    } /*!*/\n});\n'))),Object(r.b)(l.a,{mdxType:"Changelog"},"added in v7.0"),Object(r.b)("p",null," treegrid/02_configuration/22_template_events.html"),Object(r.b)("p",null," treegrid/initialization.md#initializetreegrid\ntreegrid/configuration.md#eventhandlersforhtmlcontent\ntreegrid/customization.md#addingtemplatetocells"))}b.isMDXComponent=!0}}]);