(window.webpackJsonp=window.webpackJsonp||[]).push([[1700],{1759:function(t,n,e){"use strict";e.r(n),e.d(n,"frontMatter",(function(){return r})),e.d(n,"metadata",(function(){return s})),e.d(n,"rightToc",(function(){return b})),e.d(n,"default",(function(){return d}));var o=e(2),a=e(6),i=(e(0),e(1808)),r={sidebar_label:"imageButtonText Control",title:"imageButtonText Control"},s={unversionedId:"ribbon/image_button_text",id:"ribbon/image_button_text",isDocsHomePage:!1,title:"imageButtonText Control",description:"`tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?`",source:"@site/docs/ribbon/image_button_text.md",slug:"/ribbon/image_button_text",permalink:"/ribbon/image_button_text",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/ribbon/image_button_text.md",version:"current",sidebar_label:"imageButtonText Control"},b=[],u={rightToc:b};function d(t){var n=t.components,e=Object(a.a)(t,["components"]);return Object(i.b)("wrapper",Object(o.a)({},u,e,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?")," "),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'\nA button with an image and a text label. Like ribbon/button.md, it can be TwoState and have a badge with a number.\n\n![DHX ImageButtontext](./../assets/ribbon/image_button_text.png)\n\n## Adding imageButtonText Controls\n\nYou can add the imageButtonText control with the [add()]() method of TreeCollection:\n\n~~~js\nmyRibbon.data.add({\n    type: "imageButtonText",\n    value: "User",\n    count: 10,\n    src: "../img/avatar.png"\n})\n~~~\n\n{{sample\ndhtmlxRibbon/samples/03_ribbon/01_init.html\n}}\n\n## Attributes\n\nYou can provide the following attributes in the configuration object of imageButtonText:\n\n- <strong>id</strong> (string|number) - optional, the ID of the button;\n- <strong>type</strong> (string) - always "imageButton";\n- <strong>value</strong> (string) - optional, the label;\n- <strong>src</strong> (string) - the relative path to the image;\n- <strong>count</strong> (number|string) - optional, adds a badge with a number or any symbol (badge is round and doesn\'t expand);\n- <strong>size</strong> (string) - optional, if set to "big", the button stretches vertically, not set by default;\n- <strong>$hidden</strong> (boolean) - optional, hides the control;\n- <strong>twoState</strong> (boolean) - optional, defines whether the button has two states (active/inactive);\n- <strong>active</strong> (boolean) - optional, for two-state buttons, if true, the button is in the active state;\n- <strong>css</strong> (string) - optional, adds a custom CSS class.\n\n## Working with ImageButtonText\n\nJust like ribbon/button.md, iconButton can be hidden or disabled. You can also manipulate the states of a twoState imageButtonText.\n\n\nshall I repeat the text from Button about hide, disable, tooltip and twoState, or a simple link (as it is now) will do?\n\n')))}d.isMDXComponent=!0}}]);