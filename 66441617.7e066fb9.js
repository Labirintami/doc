(window.webpackJsonp=window.webpackJsonp||[]).push([[708],{767:function(t,e,l){"use strict";l.r(e),l.d(e,"frontMatter",(function(){return b})),l.d(e,"metadata",(function(){return r})),l.d(e,"rightToc",(function(){return c})),l.d(e,"default",(function(){return i}));var o=l(2),n=l(6),a=(l(0),l(1808)),b={sidebar_label:"Object Constructor",title:"Object Constructor"},r={unversionedId:"popup/object_constructor",id:"popup/object_constructor",isDocsHomePage:!1,title:"Object Constructor",description:"`tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?`",source:"@site/docs/popup/object_constructor.md",slug:"/popup/object_constructor",permalink:"/popup/object_constructor",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/popup/object_constructor.md",version:"current",sidebar_label:"Object Constructor"},c=[{value:"Attaching to a Form&#39;s Control",id:"attaching-to-a-forms-control",children:[]},{value:"Attaching to a Toolbar&#39;s Control",id:"attaching-to-a-toolbars-control",children:[]},{value:"Attaching to an HTML Element",id:"attaching-to-an-html-element",children:[]},{value:"Destructor",id:"destructor",children:[]}],p={rightToc:c};function i(t){var e=t.components,l=Object(n.a)(t,["components"]);return Object(a.b)("wrapper",Object(o.a)({},p,l,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?")," "),Object(a.b)("h2",{id:"attaching-to-a-forms-control"},"Attaching to a Form's Control"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var myForm = new dhtmlXForm("myForm", [\n    {type: "input",    name: "name",    value: "Ogiwara Masaaki", label: "Full Name"},\n    {type: "password", name: "pwd",     value: "12345",           label: "Password"},\n    {type: "button",   name: "proceed", value: "Proceed"}\n]);\nvar myPop = new dhtmlXPopup({ \n    form: myForm, \n    id: ["name","pwd"] //attaches the same pop-up window to 2 inputs: "Full Name" and "Password"\n});\n')),Object(a.b)("p",null,"{{sample\ndhtmlxPopup/samples/01_init/06_attach_to_form.html\n}}"),Object(a.b)("p",null,"###Available parameters"),Object(a.b)("table",{className:"list",cellSpacing:"0",cellPadding:"5",border:"0"},Object(a.b)("thead",null,Object(a.b)("tr",null,Object(a.b)("th",null,"Parameter"),Object(a.b)("th",null,"Description"),Object(a.b)("th",null,"Optionality"))),Object(a.b)("tbody",null,Object(a.b)("tr",null,Object(a.b)("td",null,"form"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},"(string, object)")," the id or object of the dhtmlxForm instance that the pop-up window will be attached to"),Object(a.b)("td",null,"Mandatory")),Object(a.b)("tr",null,Object(a.b)("td",null,"id"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},"(string, array)")," the id of a form's control that you want to attach a pop-up to or an array of ids if you'd like to attach the same pop-up to several controls.",Object(a.b)("br",null)," ",Object(a.b)("br",null),Object(a.b)("i",null,'For radio buttons you need to specify the value as an array (i.e. id: ["inp1", "inp2", ["r1","v1"] ], where ["r1","v1"] is the name and value of a radio button)')),Object(a.b)("td",null,"Mandatory")),Object(a.b)("tr",null,Object(a.b)("td",null,"mode"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},'("top", "bottom", "right", "left")'),' the position that the pop-up window will appear at. By default for form-based init, "right".',Object(a.b)("br",null),Object(a.b)("br",null)," ",Object(a.b)("i",null,' If available space is less than required, dhtmlxPopup automatically changes the mode from "top" to "bottom", from "left" to "right" and vice versa')),Object(a.b)("td",null,"Optional")),Object(a.b)("tr",null,Object(a.b)("td",null,"skin"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},"(string)")," the skin to apply. Read more on skins ",Object(a.b)("a",{href:""},"here"),"."),Object(a.b)("td",null,"Optional")))),Object(a.b)("h2",{id:"attaching-to-a-toolbars-control"},"Attaching to a Toolbar's Control"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'var myToolbar = new dhtmlXToolbarObject("toolbarObj");\nmyToolbar.addButton("button_open", 2, "Open", "open.gif", "open_dis.gif");\nmyToolbar.addButton("button_save", 3, "Save", "save.gif", "save_dis.gif");\n \nvar myPop = new dhtmlXPopup({ \n    toolbar: myToolbar,\n    id: "button_open" //attaches a pop-up window to the "Open" button\n});\n')),Object(a.b)("p",null,"{{sample\ndhtmlxPopup/samples/01_init/01_attach_to_toolbar.html\n}}"),Object(a.b)("p",null,"###Available parameters"),Object(a.b)("table",{className:"list",cellSpacing:"0",cellPadding:"5",border:"0"},Object(a.b)("thead",null,Object(a.b)("tr",null,Object(a.b)("th",null,"Parameter"),Object(a.b)("th",null,"Description"),Object(a.b)("th",null,"Optionality"))),Object(a.b)("tbody",null,Object(a.b)("tr",null,Object(a.b)("td",null,"toolbar"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},"(string, object)")," the id or object of the dhtmlxToolbar instance that the pop-up window will be attached to"),Object(a.b)("td",null,"Mandatory")),Object(a.b)("tr",null,Object(a.b)("td",null,"id"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},"(string, array)")," the id of a toolbar's control that you want to attach a pop-up to or an array of ids if you'd like to attach the same pop-up to several controls."),Object(a.b)("td",null,"Mandatory")),Object(a.b)("tr",null,Object(a.b)("td",null,"mode"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},'("top", "bottom", "right", "left")'),' the position that the pop-up window will appear at. By default, "bottom".',Object(a.b)("br",null),Object(a.b)("br",null)," ",Object(a.b)("i",null,' If available space is less than required, dhtmlxPopup automatically changes the mode from "top" to "bottom", from "left" to "right" and vice versa')),Object(a.b)("td",null,"Optional")),Object(a.b)("tr",null,Object(a.b)("td",null,"skin"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},"(string)")," the skin to apply. Read more on skins ",Object(a.b)("a",{href:""},"here"),"."),Object(a.b)("td",null,"Optional")))),Object(a.b)("h2",{id:"attaching-to-an-html-element"},"Attaching to an HTML Element"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'<input type="text" onclick="showPopup(this);" onblur="hidePopup();" value="click"/>\n \n<script>\n    var myPop = new dhtmlXPopup();\n    myPop.attachHTML("You can enter some text into here");\n \n    function showPopup(inp) {\n        myPop.show(20,20,400,300); //params are: x, y, width, height\n    }\n    function hidePopup() {\n        myPop.hide();\n    }\n<\/script>\n')),Object(a.b)("p",null,"{{sample\ndhtmlxPopup/samples/01_init/07_custom_object.html\n}}"),Object(a.b)("p",null,"###Available parameters"),Object(a.b)("table",{className:"list",cellSpacing:"0",cellPadding:"5",border:"0"},Object(a.b)("thead",null,Object(a.b)("tr",null,Object(a.b)("th",null,"Parameter"),Object(a.b)("th",null,"Description"),Object(a.b)("th",null,"Optionality"))),Object(a.b)("tbody",null,Object(a.b)("tr",null,Object(a.b)("td",null,"mode"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},'("top", "bottom", "right", "left")'),' the position that the pop-up window will appear at. By default, "bottom".',Object(a.b)("br",null),Object(a.b)("br",null)," ",Object(a.b)("i",null,' If available space is less than required, dhtmlxPopup automatically changes the mode from "top" to "bottom", from "left" to "right" and vice versa')),Object(a.b)("td",null,"Optional")),Object(a.b)("tr",null,Object(a.b)("td",null,"skin"),Object(a.b)("td",null,Object(a.b)("span",{style:{color:"rgb(141, 122, 122)"}},"(string)")," the skin to apply. Read more on skins ",Object(a.b)("a",{href:""},"here"),"."),Object(a.b)("td",null,"Optional")))),Object(a.b)("h2",{id:"destructor"},"Destructor"),Object(a.b)("p",null,"To remove a dhtmlxPopup instance and clear the memory, use the api/dhtmlxpopup_unload.md method:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},"myPop.unload();\nmyPop = null;\n")),Object(a.b)("p",null,"{{sample\ndhtmlxPopup/samples/02_api/01_skins.html\n}}"),Object(a.b)("p",null," Once you reload the page, the dhtmlxPopup's instances are destroyed automatically."))}i.isMDXComponent=!0}}]);