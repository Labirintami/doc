(window.webpackJsonp=window.webpackJsonp||[]).push([[511],{570:function(t,n,o){"use strict";o.r(n),o.d(n,"frontMatter",(function(){return i})),o.d(n,"metadata",(function(){return s})),o.d(n,"rightToc",(function(){return l})),o.d(n,"default",(function(){return b}));var e=o(2),r=o(6),a=(o(0),o(1808)),i={sidebar_label:"regularButton Control",title:"regularButton Control"},s={unversionedId:"ribbon/regular_button",id:"ribbon/regular_button",isDocsHomePage:!1,title:"regularButton Control",description:"`tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?`",source:"@site/docs/ribbon/regular_button.md",slug:"/ribbon/regular_button",permalink:"/ribbon/regular_button",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/ribbon/regular_button.md",version:"current",sidebar_label:"regularButton Control"},l=[],u={rightToc:l};function b(t){var n=t.components,o=Object(r.a)(t,["components"]);return Object(a.b)("wrapper",Object(e.a)({},u,o,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"tododelete \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f?")," "),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},'\nThis is a material design button that has two varieties: default and \'flat\'.\n\n![DHX Ribbon regularButton](../assets/ribbon/regular_button.png)\n\n## Adding regularButton\n\nYou can add regularButton with the [add()]() method of TreeCollection:\n\n~~~js\nribbon.data.add({\n    type: "regularButton",\n    value: "Add",\n    icon: "dxi-plus"\n});\n~~~\n\n{{sample\ndhtmlxRibbon/samples/03_ribbon/01_init.html\n}}\n\n## Attributes\n\nYou can provide the following attributes in the configuration object of a button:\n\n- <strong>id</strong> (string|number) - optional, the ID of the button;\n- <strong>type</strong> (string) - always "regularButton";\n- <strong>icon</strong> (string) - optional, the icon;\n- <strong>value</strong> (string) - optional, the label;\n- <strong>size</strong> (string) - optional, "flat" - blue on transparent, default - transparent on blue;\n- <strong>$hidden</strong> (boolean) - optional, hides the control;\n- <strong>twoState</strong> (boolean) - optional, defines whether the button has two states (active/inactive);\n- <strong>active</strong> (boolean) - optional, for two-state buttons, if true, the button is in the active state;\n- <strong>css</strong> (string) - optional, adds a custom CSS class.\n\n## Choosing the Style\n\nBy default, regularButton is blue with the light-colored text and icon. You can choose the other style and invert the colors by setting the <strong>size</strong> property to "flat":\n\n~~~js\n{\n    type: "regularButton",\n    value: "Add",\n    size: "flat",\n    icon: "dxi-plus"\n}\n~~~\n\n## Working with RegularButton\n\nJust like ribbon/button.md, iconButton can be hidden, disabled and can have a tooltip. You can also manipulate the states of a twoState iconButton.\n\n\nshall I repeat the text from Button about hide, disable, tooltip and twoState, or a simple link (as it is now) will do?\n\n\n')))}b.isMDXComponent=!0}}]);