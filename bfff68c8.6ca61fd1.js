(window.webpackJsonp=window.webpackJsonp||[]).push([[1296],{1355:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return d})),t.d(n,"metadata",(function(){return r})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return b}));var a=t(2),i=t(6),l=(t(0),t(1808)),o=t(1809),d={sidebar_label:"eventHandlers",title:"eventHandlers"},r={unversionedId:"grid/api/grid_eventhandlers_config",id:"grid/api/grid_eventhandlers_config",isDocsHomePage:!1,title:"eventHandlers",description:"@short: adds event handlers to the HTML elements of a custom template of a Grid cell or to the HTML elements defined in the data set of Grid",source:"@site/docs/grid/api/grid_eventhandlers_config.md",slug:"/grid/api/grid_eventhandlers_config",permalink:"/grid/api/grid_eventhandlers_config",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/grid/api/grid_eventhandlers_config.md",version:"current",sidebar_label:"eventHandlers",sidebar:"docs",previous:{title:"editing",permalink:"/grid/api/grid_editing_config"},next:{title:"fitToContainer",permalink:"/grid/api/grid_fittocontainer_config"}},c=[],s={rightToc:c};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(o.c,{mdxType:"Short"},"adds event handlers to the HTML elements of a custom template of a Grid cell or to the HTML elements defined in the data set of Grid",Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-todoapi"},"object eventHandlers;\neventHandlers?: {\n    [key: string]: any;\n};\n"))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},' \n\n// adds event handler to the HTML element of a custom template of a cell\nconst grid = new dhx.Grid("grid", {\n    columns: [\n        { width: 200, id: "country", header: [{ text: "Country" }], htmlEnable: true },\n        { width: 150, id: "netChange", header: [{text: "Net Change"}],\n            htmlEnable: true,\n            tooltip: false,\n            template: function (text, row, col) { /*!*/\n                return "<div className=\'cell__template\'><input type=\'checkbox\'  /*!*/\n                    disabled " + (text > 3000000 ? "checked" : "") + " ></div>"; /*!*/\n            } /*!*/\n        },\n        // more options\n    ],\n    data: data,\n    eventHandlers: { /*!*/\n        onmouseover: { /*!*/\n            cell__template: function(event, data) { /*!*/\n                display(JSON.stringify(data.row, null, 2)); /*!*/\n            } /*!*/\n        } /*!*/\n    } /*!*/\n});\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"api_config\n")),Object(l.b)(o.b,{mdxType:"Descr"},"The ",Object(l.b)("strong",null,"eventHandlers")," object includes a set of *key:value* pairs, where:",Object(l.b)("table",{className:"webixdoc_links"},Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",{className:"webixdoc_links0"},Object(l.b)("i",null,"key")),Object(l.b)("td",null," the name of the event. Note, that at the beginning of the event name the ",Object(l.b)("b",null,"'on'")," prefix is used (onclick, onmouseover).")),Object(l.b)("tr",null,Object(l.b)("td",{className:"webixdoc_links0"},Object(l.b)("i",null,"value")),Object(l.b)("td",null,"an object that contains a ",Object(l.b)("i",null,"key:value")," pair, where ",Object(l.b)("i",null,"key")," is the css class name that the handler will be applied to and ",Object(l.b)("i",null,"value")," is a function that takes two parameters:",Object(l.b)("ul",null,Object(l.b)("li",null,Object(l.b)("b",null,"event")," - an event object"),Object(l.b)("li",null,Object(l.b)("b",null,"object")," - an object with two attributes:",Object(l.b)("ol",null,"- ",Object(l.b)("b",null,"row")," - an object with a row configuration"),Object(l.b)("ol",null,"- ",Object(l.b)("b",null,"column")," - an object with a column configuration"))))))),Object(l.b)("p",null,"An example of adding event handlers to the HTML elements defined in the data set of Grid is given below:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'const data = [\n    {\n        "country": "<div className=\'cell__html\'><span>China</span> /*!*/\n            <img src=\'../flags/cn.svg\'></div>", /*!*/\n        "population": "1415045928", "yearlyChange": "0.0039",\n        "netChange": "5528531", "destiny": "151",\n        "urban": "0.5800", "id": "1"\n    },\n    // more options\n];\n\nconst grid = new dhx.Grid("grid", {\n    columns: [\n        { width: 200, id: "country", header: [{ text: "Country" }], htmlEnable: true }, /*!*/\n        // more options\n    ],\n    data: data,\n    eventHandlers: { /*!*/\n        onclick: { /*!*/\n            cell__html: function(event, data) { /*!*/\n                display(JSON.stringify(data.col, null, 2)); /*!*/\n            }, /*!*/\n        }, /*!*/\n        onmouseover: { /*!*/\n            cell__html: function(event) { /*!*/\n                display("You are over " + event.target.tagName); /*!*/\n            }, /*!*/\n        } /*!*/\n    } /*!*/\n});\n'))),Object(l.b)(o.a,{mdxType:"Changelog"},"added in v7.0"),Object(l.b)("p",null," grid/02_configuration/25_template_events.html"),Object(l.b)("p",null," grid/initialization.md#initializegrid\ngrid/configuration.md#eventhandlersforhtmlcontent\ngrid/customization.md#addingtemplatetocells"))}b.isMDXComponent=!0}}]);