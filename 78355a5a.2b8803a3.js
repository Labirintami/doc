(window.webpackJsonp=window.webpackJsonp||[]).push([[815],{874:function(a,t,e){"use strict";e.r(t),e.d(t,"frontMatter",(function(){return l})),e.d(t,"metadata",(function(){return c})),e.d(t,"rightToc",(function(){return d})),e.d(t,"default",(function(){return s}));var n=e(2),o=e(6),r=(e(0),e(1808)),l={sidebar_label:"Data Loading",title:"Data Loading"},c={unversionedId:"chart/data_loading",id:"chart/data_loading",isDocsHomePage:!1,title:"Data Loading",description:"There are two ways of loading data into dhtmlxChart:",source:"@site/docs/chart/data_loading.md",slug:"/chart/data_loading",permalink:"/chart/data_loading",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/chart/data_loading.md",version:"current",sidebar_label:"Data Loading",sidebar:"docs",previous:{title:"Configuration",permalink:"/chart/configuration_properties"},next:{title:"Work with Chart",permalink:"/chart/usage"}},d=[{value:"Preparing data set",id:"preparing-data-set",children:[]},{value:"External data loading",id:"external-data-loading",children:[]},{value:"Loading from local source",id:"loading-from-local-source",children:[]},{value:"Saving and restoring state",id:"saving-and-restoring-state",children:[]}],i={rightToc:d};function s(a){var t=a.components,e=Object(o.a)(a,["components"]);return Object(r.b)("wrapper",Object(n.a)({},i,e,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There are two ways of loading data into dhtmlxChart:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"load data from an external file"),Object(r.b)("li",{parentName:"ul"},"load data from a local data source")),Object(r.b)("p",null,"First, you need to prepare a data set that will be loaded into Chart."),Object(r.b)("h2",{id:"preparing-data-set"},"Preparing data set"),Object(r.b)("p",null,"dhtmlxChart expects loaded data in the JSON format. Here is an example of an appropriate data set:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'var dataset = [\n    { "month": "`02", "company A": 20, "company B": 52, "company C": 72},\n    { "month": "`03", "company A": 5, "company B": 33, "company C": 90},\n    { "month": "`04", "company A": 55, "company B": 30, "company C": 81},\n    { "month": "`05", "company A": 30, "company B": 11, "company C": 62},\n    { "month": "`06", "company A": 27, "company B": 14, "company C": 68},\n    { "month": "`07", "company A": 32, "company B": 31, "company C": 64},\n    { "month": "`08", "company A": 50, "company B": 22, "company C": 30},\n    { "month": "`09", "company A": 12, "company B": 19, "company C": 65},\n    { "month": "`10", "company A": 10, "company B": 24, "company C": 50},\n    { "month": "`11", "company A": 17, "company B": 40, "company C": 78}\n]\n')),Object(r.b)("p",null,"Each object in the data set contains a number of ",Object(r.b)("em",{parentName:"p"},"key:value")," pairs for data titles and values. "),Object(r.b)("p",null,'A data set for Pie, Pie3D and Donut charts differs a little bit. You need to provide the "color":"value" properties to color the sections of these types of Chart. For example:'),Object(r.b)("table",{className:"webixdoc_links"},Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",{className:"webixdoc_links0"},Object(r.b)("b",null,"id")),Object(r.b)("td",null,"(",Object(r.b)("i",null,"string,number"),") the id of a series ")),Object(r.b)("tr",null,Object(r.b)("td",{className:"webixdoc_links0"},Object(r.b)("b",null,"text")),Object(r.b)("td",null,"(",Object(r.b)("i",null,"string"),") the name of the data set property to map labels of data values to")),Object(r.b)("tr",null,Object(r.b)("td",{className:"webixdoc_links0"},Object(r.b)("b",null,"value")),Object(r.b)("td",null,"(",Object(r.b)("i",null,"string"),") the name of the data set property to map data values to ")),Object(r.b)("tr",null,Object(r.b)("td",{className:"webixdoc_links0"},Object(r.b)("b",null,"color")),Object(r.b)("td",null,"(",Object(r.b)("i",null,"string"),") points to the property in a data set that defines the color of a pie/donut sector")))),Object(r.b)("br",null),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'var pie_dataset = [\n    { "id": "Jan", "value": 44.33, "color": "#394E79", "month": "Jan"},\n    { "id": "Feb", "value": 22.12, "color": "#5E83BA", "month": "Feb"},\n    { "id": "Mar", "value": 53.21, "color": "#C2D2E9", "month": "Mar"},\n    { "id": "Apr", "value": 34.25, "color": "#9A8BA5", "month": "Apr"},\n    { "id": "May", "value": 24.65, "color": "#E3C5D5", "month": "May"}\n];\n')),Object(r.b)("h2",{id:"external-data-loading"},"External data loading"),Object(r.b)("p",null,"To load data from an external file, make use of the data_collection/api/load.md method of Data Collection. It takes the URL of the file with data as a parameter:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'var chart = new dhx.Chart("chart_container");\nchart.data.load("../common/dataset.json");\n')),Object(r.b)("p",null,"The component will make an AJAX call and expect the remote URL to provide valid JSON data."),Object(r.b)("p",null,"Data loading is asynchronous, so you need to wrap any after-loading code into a promise:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'chart.data.load("/some/data").then(function(){\n   // some logic here\n});\n')),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/qah8exx2"},"https://snippet.dhtmlx.com/qah8exx2"),"\tChart. Load Data"),Object(r.b)("h2",{id:"loading-from-local-source"},"Loading from local source"),Object(r.b)("p",null,"To load data from a local data source, use the data_collection/api/parse.md method of Data Collection. Pass ",Object(r.b)("a",{parentName:"p",href:"#preparingdataset"},"a predefined data set")," as a parameter of this method:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},'var chart = new dhx.Chart("chart_container");\nchart.data.parse(dataset);\n')),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/id9nbujd"},"https://snippet.dhtmlx.com/id9nbujd"),"\tChart. Basic Initialization Bar Chart"),Object(r.b)("h2",{id:"saving-and-restoring-state"},"Saving and restoring state"),Object(r.b)("p",null,"To save the current state of a chart, use the data_collection/api/serialize.md method of Data Collection. It converts the data of a chart into an array of JSON objects.\nEach JSON object contains a set of ",Object(r.b)("em",{parentName:"p"},"key:value")," pairs for data titles and values."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"var state = chart1.data.serialize();\n")),Object(r.b)("p",null,"Then you can parse the data stored in the saved state array to a different chart. For example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-js"},"// creating a new chart\nvar chart2 = new dhx.Chart(document.body);\n// parsing the state of chart1 into chart2\nchart2.data.parse(state);\n")),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/rqvvpopp"},"https://snippet.dhtmlx.com/rqvvpopp"),"\tChart. Serialize"))}s.isMDXComponent=!0}}]);