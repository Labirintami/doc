(window.webpackJsonp=window.webpackJsonp||[]).push([[1645],{1704:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var l=n(2),a=n(6),b=(n(0),n(1808)),r={sidebar_label:"Tree Collection API",title:"Tree Collection API"},o={unversionedId:"helpers/tree_collection",id:"helpers/tree_collection",isDocsHomePage:!1,title:"Tree Collection API",description:"A set of API methods that allow you to work with data of a component with tree-line structure.",source:"@site/docs/helpers/tree_collection.md",slug:"/helpers/tree_collection",permalink:"/helpers/tree_collection",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/helpers/tree_collection.md",version:"current",sidebar_label:"Tree Collection API"},c=[{value:"Methods",id:"methods",children:[]}],i={rightToc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(b.b)("wrapper",Object(l.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"A set of API methods that allow you to work with data of a component with tree-line structure."),Object(b.b)("h2",{id:"methods"},"Methods"),Object(b.b)("h4",{id:"add"},"add()"),Object(b.b)("p",null,"adds an item to a component"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"config")," - (*object*)    the configuration of the added item"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"index")," - (*number*)    defines the position of the item in the component"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"parent")," -  (*string*)    the ID of the future parent item")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'myToolbar.data.add({\n    type:"button",\n    icon:"dxi-plus",\n    value:"New"\n},1);\n')),Object(b.b)("h4",{id:"update"},"update()"),Object(b.b)("p",null,"changes an item"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)    the ID of an item"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"item")," - (*object*)    new properties for an item")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.update("add_btn",{ value:"Add new" });\n')),Object(b.b)("h4",{id:"parse"},"parse()"),Object(b.b)("p",null,"loads a collection of items from a local source"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"data")," -  (*array*) the items of the component")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.parse([\n    {\n        type: "button",\n        icon: "dxi-plus",\n        value: "Tania",\n        count: 11\n    },\n    {\n        type: "separator"\n    },          \n    {\n        type: "navItem",\n        icon: "",\n        value: "Language",\n        items: [\n            {\n                icon: "dxi-printer",\n                value: "English"\n            },\n            {\n                icon: "dxi-printer",\n                value: "\u65e5\u672c\u8a9e"\n            }\n        ]\n    }\n]);\n')),Object(b.b)("h4",{id:"serialize"},"serialize()"),Object(b.b)("p",null,"returns a collection of all items"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.serialize();\n/*\n[\n    {\n        "type":"iconButton",\n        "icon":"dxi-menu",\n        "id":"u1531484947674","parent":"_ROOT_u1531484947673"\n    },\n    {\n        "type":"button",\n        "icon":"dxi-plus",\n        "value":"Tania",\n        "count":11,\n        "id":"u1531484947675","parent":"_ROOT_u1531484947673"\n    }\n]\n*/\n')),Object(b.b)("h4",{id:"load"},"load()"),Object(b.b)("p",null,"loads items from a file"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"path")," - (*string*)    the path to the file")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'myToolbar.data.load("[path to this file]/file.json");\n')),Object(b.b)("h4",{id:"loaditems"},"loadItems()"),Object(b.b)("p",null,"loads child items of a control from a file"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)    the ID of a control")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'myToolbar.data.loadItems("menu_id");\n')),Object(b.b)("h4",{id:"refreshitems"},"refreshItems()"),Object(b.b)("p",null,"refreshes child items of a control"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)    the ID of a control")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'myToolbar.data.refreshItems("menu_id");\n')),Object(b.b)("h4",{id:"getitem"},"getItem()"),Object(b.b)("p",null,"gets an item by its ID"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)  the ID of an item")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'var add_btn = toolbar.data.getItem("add_btn");\n')),Object(b.b)("h4",{id:"getparent"},"getParent()"),Object(b.b)("p",null,"gets the ID of the parent of the control"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)  the ID of a control")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'var parentId = toolbar.data.getParent("add_btn");\n')),Object(b.b)("h4",{id:"getitems"},"getItems()"),Object(b.b)("p",null,"gets the child items of a control"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)  the ID of a control")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'var items = toolbar.data.getItems("menu1");\n')),Object(b.b)("h4",{id:"getlength"},"getLength()"),Object(b.b)("p",null,"counts child items of a control"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)  the ID of a control")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.getLength("menu1");\n')),Object(b.b)("h4",{id:"map"},"map()"),Object(b.b)("p",null,"iterates through items"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"cb")," -   (*function*)    the function that will be applied to every item"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)  the ID of a control the child items of which will be included"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"direct")," - (*boolean*) defines whether only direct children of the control will be included in the iteration")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.map((item)=>{\n    //remove all icons\n    item.icon = "";\n});\ntoolbar.paint();\n')),Object(b.b)("p",null,"To work with all childs of a particular control, pass one more parameter to ",Object(b.b)("strong",null,"map()")," - the ID of the control:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.map((item)=>{\n    // disable items\n    item.$disabled = true;\n},"menu_1");\ntoolbar.paint();\n')),Object(b.b)("p",null,"If you want to iterate only through immediate children, set the third parameter to ",Object(b.b)("em",{parentName:"p"},"false"),":"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.map((item)=>{\n    // add a css class to each item\n    item.css = "highlight";\n},"menu_1",false);\ntoolbar.paint();\n')),Object(b.b)("h4",{id:"eachchild"},"eachChild()"),Object(b.b)("p",null,"iterates through child items of a control"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -   (*string*)  the ID of the control"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"direct"),"  - (*boolean*) defines whether only direct child items will be included in the iteration")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.eachChild("menu_1", item => {\n    // disable items\n    item.$disabled = true;\n});\ntoolbar.paint();\n')),Object(b.b)("p",null,"To access only the immediate children, add the ",Object(b.b)("strong",null,"direct")," parameter and set it to ",Object(b.b)("em",{parentName:"p"},"false"),":"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.eachChild("menu_1", item => {\n    // disable items\n    item.$disabled = true;\n},false);\ntoolbar.paint();\n')),Object(b.b)("h4",{id:"haveitems"},"haveItems()"),Object(b.b)("p",null,"checks whether an item has children"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id")," -   (*string*)    the ID of a control")),Object(b.b)("p",null,"returns boolean"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'if (toolbar.data.haveChilds("menu1"))\n    //do something;\n')),Object(b.b)("h4",{id:"eachparent"},"eachParent()"),Object(b.b)("p",null,"iterates through all the parent items (the immediate parent and its parent, etc until the parent is the component itself)"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -   (*string*)  the ID of the item"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"cb")," -   (*function*)  the function that will be applied to every parent of the item")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.eachParent("new_btn", item => console.log(item));\n')),Object(b.b)("h4",{id:"move"},"move()"),Object(b.b)("p",null,"moves items to different positions"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id")," -   (*string*)  the ID of the item"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"index")," - (*number*)  the new position")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.move("profile_btn",-1);\n')),Object(b.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(b.b)("div",{parentName:"div",className:"admonition-heading"},Object(b.b)("h5",{parentName:"div"},Object(b.b)("span",{parentName:"h5",className:"admonition-icon"},Object(b.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(b.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(b.b)("div",{parentName:"div",className:"admonition-content"},Object(b.b)("p",{parentName:"div"},"The ID should always be a string, even if in the control configuration you've set it as a number."))),Object(b.b)("h4",{id:"getid"},"getId()"),Object(b.b)("p",null,"gets the ID of an item"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"index")," - (*number*) the position of an item on the toolbar (from 0)")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"const id = toolbar.data.getId(2);\n")),Object(b.b)("h4",{id:"getindex"},"getIndex()"),Object(b.b)("p",null,"gets the current position of an item "),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*) the ID of an item")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.getIndex("add_btn");\n')),Object(b.b)("h4",{id:"copy"},"copy()"),Object(b.b)("p",null,"adds a copy of an item and places it in the specified position"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id")," -   (*string*)  the ID of the item"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"index")," - (*number*)  the position of a copy"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"target"),"  - (*TreeCollection*)   a data collection where the copy will be stored"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"target_id")," - (*string*)  (for menu options) the ID of a menuItem to which a copy of the menu option will be placed")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.copy("print_btn",2)\n// another toolbar\ntoolbar2.data.copy("save_btn",1,toolbar1.data);\n')),Object(b.b)("h4",{id:"cancopy"},"canCopy()"),Object(b.b)("p",null,"checks if it is possible to copy a control into some other control"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -   (*string*)    the ID of the source control"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"targetId")," -  (*string*)    the ID of the target control")),Object(b.b)("h4",{id:"remove"},"remove()"),Object(b.b)("p",null,"removes an item"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"    *string*  the ID of an item")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.remove("id");\n')),Object(b.b)("h4",{id:"removeall"},"removeAll()"),Object(b.b)("p",null,"clears the component of all controls"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"toolbar.data.removeAll();\n")),Object(b.b)("h4",{id:"getroot"},"getRoot()"),Object(b.b)("p",null,"returns the ID of the master component"),Object(b.b)("p",null,"returns string"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"toolbar.data.getRoot();\n")),Object(b.b)("h4",{id:"sort"},"sort()"),Object(b.b)("p",null,"sorts controls according to some criteria"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"by"),"   -  (*object*)    the parameters for sorting: - ",Object(b.b)("strong",null,"by"),"  -  ( *string*)    the field of the item object - ",Object(b.b)("strong",null,"dir"),"  - (*string*)    the direction of sorting ('asc' or 'desc')"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"rule")," - (*function*)  a sorting rule; the function must have two parameters and return a number (-1,0,1)")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.sort({by:"type", dir:"desc"});\n')),Object(b.b)("p",null,"For more complex sorting, set these parameters:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"toolbar.data.sort({\n    rule: (a,b) => (a.type < b.type) ? -1 : ( (a.type > b.type) ? 1 : 0 )\n});\n")),Object(b.b)("h4",{id:"filter"},"filter()"),Object(b.b)("p",null,"filters controls by some criteria"),Object(b.b)("p",null,"parameters:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"conf")," -  (*object*) optional, the criteria for filtering: - ",Object(b.b)("strong",null,"by")," - parameter - ",Object(b.b)("strong",null,"as")," - value")),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'toolbar.data.filter({ by:"type", match:"button" });\n')),Object(b.b)("p",null,"Without parameters cancels filtering:"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"toolbar.data.filter();    // show all\n")),Object(b.b)("h4",{id:"restoreorder"},"restoreOrder()"),Object(b.b)("p",null,"restores the component to the state previous to sorting / filtering"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},"toolbar.restoreOrder();\n")),Object(b.b)("h4",{id:"exists"},"exists()"),Object(b.b)("p",null,"checks if the control exists"),Object(b.b)("p",null,"parameter:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",null,"id"),"  -  (*string*)    the ID of the control")),Object(b.b)("p",null,"returns boolean"),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-js"},'if (toolbar.data.exists("item_id"))\n    // do something\n')),Object(b.b)("p",null," check and improve the list, make structure like in data collection, add events"))}s.isMDXComponent=!0}}]);