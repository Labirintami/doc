(window.webpackJsonp=window.webpackJsonp||[]).push([[1403],{1462:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return s}));var l=a(2),o=a(6),n=(a(0),a(1808)),i={sidebar_label:"Work with Layout",title:"Work with Layout",description:null},c={unversionedId:"layout/work_with_layout",id:"layout/work_with_layout",isDocsHomePage:!1,title:"Work with Layout",description:"Removing cells",source:"@site/docs/layout/work_with_layout.md",slug:"/layout/work_with_layout",permalink:"/layout/work_with_layout",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/layout/work_with_layout.md",version:"current",sidebar_label:"Work with Layout",sidebar:"docs",previous:{title:"Configuration of a Cell",permalink:"/layout/cell_configuration"},next:{title:"Customization",permalink:"/layout/customization"}},p=[{value:"Removing cells",id:"removing-cells",children:[]},{value:"Getting the object of a cell",id:"getting-the-object-of-a-cell",children:[]},{value:"Attaching a component to a cell",id:"attaching-a-component-to-a-cell",children:[]},{value:"Attaching an HTML content to a cell",id:"attaching-an-html-content-to-a-cell",children:[]},{value:"Hiding/showing a cell",id:"hidingshowing-a-cell",children:[]},{value:"Checking visibility of a cell",id:"checking-visibility-of-a-cell",children:[]},{value:"Collapsing/expanding a cell",id:"collapsingexpanding-a-cell",children:[]},{value:"Toggling a cell",id:"toggling-a-cell",children:[]}],h={rightToc:p};function s(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(n.b)("wrapper",Object(l.a)({},h,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h2",{id:"removing-cells"},"Removing cells"),Object(n.b)("p",null,"To remove a certain cell from a layout, apply the ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_removecell_method"},"removeCell")," method. As a parameter it takes the id of a cell to be removed:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},"layout.removeCell(id);\n")),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/tnujp7jk"},"https://snippet.dhtmlx.com/tnujp7jk"),"\tLayout. Remove Cell"),Object(n.b)("h2",{id:"getting-the-object-of-a-cell"},"Getting the object of a cell"),Object(n.b)("p",null,"You can get the object of a cell by its id. Use the layout/api/layout_getcell_method.md method for this purpose:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'layout.getCell("header");\n')),Object(n.b)("h2",{id:"attaching-a-component-to-a-cell"},"Attaching a component to a cell"),Object(n.b)("p",null,"You can easily attach any DHTMLX component to a cell of Layout using the ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_attach_method"},"attach")," method of a cell:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'var layout = new dhx.Layout({width:"400px", height:"600px"});\n\nvar list = new dhx.List(null, {\n    template: listTemplate,\n    itemHeight: 52,\n    height: "100%",\n    dragMode: "both"\n});\n        \nlist.data.load(\'../common/library.json\');\n\nlayout.getCell("list").attach(list);\n')),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/6wuxj6sh"},"https://snippet.dhtmlx.com/6wuxj6sh"),"\tLayout. Attach"),Object(n.b)("h2",{id:"attaching-an-html-content-to-a-cell"},"Attaching an HTML content to a cell"),Object(n.b)("p",null,"You can easily attach some HTML content to a cell of Layout via the ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_attachhtml_method"},"attachHTML()")," method of a cell. It takes as a parameter a string with HTML."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'var layout = new dhx.Layout({width:"400px", height:"600px"});\nvar html = "<p>Hello world</p>";\nlayout.getCell("content").attachHTML(html);\n')),Object(n.b)("h2",{id:"hidingshowing-a-cell"},"Hiding/showing a cell"),Object(n.b)("p",null,"It is possible to hide/show a cell with the help of its API. Both the ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_hide_method"},"hide")," and ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_show_method"},"show")," methods take the id of a cell as a parameter."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'// hiding a cell\nlayout.getCell("toolbar").hide();\n')),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/u0jd8ah3"},"https://snippet.dhtmlx.com/u0jd8ah3"),"\tLayout. Hide"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'// showing a cell\nlayout.getCell("toolbar").show();\n')),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/v0q7gq26"},"https://snippet.dhtmlx.com/v0q7gq26"),"\tLayout. Show"),Object(n.b)("h2",{id:"checking-visibility-of-a-cell"},"Checking visibility of a cell"),Object(n.b)("p",null,"Since the object of a cell has the ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_hidden_config"},"hidden")," attribute, a cell can be hidden in a layout. You can check the visibilty of cell via the ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_isvisible_method"},"isVisible")," method. It returns ",Object(n.b)("em",{parentName:"p"},"true")," if a cell is visible and ",Object(n.b)("em",{parentName:"p"},"false")," if it is hidden."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'layout.getCell("sidebar").isVisible(); // -> true|false\n')),Object(n.b)("h2",{id:"collapsingexpanding-a-cell"},"Collapsing/expanding a cell"),Object(n.b)("p",null,"You can collapse/expand a specified cell using two corresponding methods of a Layout cell - ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_collapse_method"},"collapse()")," and ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_expand_method"},"expand()"),":"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'// collapsing a cell by its id\nlayout.getCell("sidebar").collapse();\n\n// expanding a cell by its id\nlayout.getCell("sidebar").expand();\n')),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/h0wtlpyk"},"https://snippet.dhtmlx.com/h0wtlpyk"),"\tLayout. Expand/Collapse"),Object(n.b)("h2",{id:"toggling-a-cell"},"Toggling a cell"),Object(n.b)("p",null,"It is also possible to collapse and expand a specified cell of Layout using the ",Object(n.b)("a",{parentName:"p",href:"/layout/api/layout_toggle_method"},"toggle()")," method of a cell:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},'layout.getCell("toolbar").toggle();\n')),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/t38tqk0k"},"https://snippet.dhtmlx.com/t38tqk0k"),"\tLayout. Toggle"),Object(n.b)("p",null,"complete",Object(n.b)("br",null),"\nattach()? getParent()? "))}s.isMDXComponent=!0}}]);