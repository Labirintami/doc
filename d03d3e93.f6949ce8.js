(window.webpackJsonp=window.webpackJsonp||[]).push([[1407],{1466:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return l})),a.d(e,"metadata",(function(){return c})),a.d(e,"rightToc",(function(){return r})),a.d(e,"default",(function(){return s}));var i=a(2),n=a(6),o=(a(0),a(1808)),l={sidebar_label:"Step 2. Specify the Layout",title:"Step 2. Specify the Layout"},c={unversionedId:"tutorial/basic_application/step2",id:"tutorial/basic_application/step2",isDocsHomePage:!1,title:"Step 2. Specify the Layout",description:"Our application will have the following structure:",source:"@site/docs/tutorial/basic_application/step2.md",slug:"/tutorial/basic_application/step2",permalink:"/tutorial/basic_application/step2",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/tutorial/basic_application/step2.md",version:"current",sidebar_label:"Step 2. Specify the Layout"},r=[],p={rightToc:r};function s(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(o.b)("wrapper",Object(i.a)({},p,a,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Our application will have the following structure:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Toolbar"),Object(o.b)("li",{parentName:"ul"},"Grid with a list of users"),Object(o.b)("li",{parentName:"ul"},"Chart")),Object(o.b)("img",{style:{margin:"19px",display:"block"},src:"tutorial/basic_application/layout_002.png"}),Object(o.b)("p",null,"To set the main scheme of our app we should start by initializing the Layout. Later we will attach the rest of the components to it."),Object(o.b)("div",{style:{fontWeight:"bold",color:"rgb(65, 65, 65)",paddingTop:"10px",fontSize:"15px"}},"To specify the app's layout:"),Object(o.b)("p",null,"1","."," Create an HTML container where the layout will be placed later."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},'<div id="layout"></div>\n')),Object(o.b)("p",null,"2","."," Create a Layout object and place it into the HTML container that we\u2019ve just created. "),Object(o.b)("p",null,"{{snippet\n'index.html' file\n}}"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'var layout = new dhx.Layout("layout", {  \n    height: "700px", // it\u2019s important to set the height of the layout\n    width: "1600px",\n    rows: [\n        {    \n            id: "toolbar-cell", //here the toolbar will be placed\n            gravity: false, //remove automatic cell stretching\n        }, \n        {\n            cols: [ \n                {\n                    id: "grid-cell", //here the grid will be placed\n                    width: "65%" // width in % for this cell\n                },\n                {\n                    css: "dhx_widget--bg_gray", \n                    // pass the css class to make the background gray\n                    id: "chart-cell", //here the chart will be placed\n                    width: "35%", // width in% for this cell\n                    padding: "20px" // padding inside the cell\n                }\n            ]\n        }\n    ]\n});\n')),Object(o.b)("i",null," We divide the layout into two rows. The first row will contain a toolbar. The second row will be divided into two columns: one for Grid and another for Chart. "),Object(o.b)("p",null,"You can read more information about ",Object(o.b)("a",{parentName:"p",href:"/layout/configuration#configurationofcell"},"Configuration of a cell")," and  about ",Object(o.b)("a",{parentName:"p",href:"/layout/customization#stylinglayoutcells"},"Styling of Layout cells"),"."),Object(o.b)("div",{id:"tutorial_step"},Object(o.b)("a",{id:"next_step",href:"tutorial/basic_application/step3.md"})))}s.isMDXComponent=!0}}]);