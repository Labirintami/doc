(window.webpackJsonp=window.webpackJsonp||[]).push([[853],{912:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var b=n(2),a=n(6),l=(n(0),n(1808)),o={sidebar_label:"Work with Ribbon",title:"Work with Ribbon"},i={unversionedId:"ribbon/operating_ribbon",id:"ribbon/operating_ribbon",isDocsHomePage:!1,title:"Work with Ribbon",description:"Setting/getting values and states",source:"@site/docs/ribbon/operating_ribbon.md",slug:"/ribbon/operating_ribbon",permalink:"/ribbon/operating_ribbon",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/ribbon/operating_ribbon.md",version:"current",sidebar_label:"Work with Ribbon",sidebar:"docs",previous:{title:"Data Loading",permalink:"/ribbon/loading_json"},next:{title:"Customization",permalink:"/ribbon/fa_icons"}},c=[{value:"Setting/getting values and states",id:"settinggetting-values-and-states",children:[]},{value:"Hiding and showing controls",id:"hiding-and-showing-controls",children:[]},{value:"Disabling and enabling controls",id:"disabling-and-enabling-controls",children:[]},{value:"Checking if a Ribbon item is disabled",id:"checking-if-a-ribbon-item-is-disabled",children:[]},{value:"Selecting/Unselecting an item",id:"selectingunselecting-an-item",children:[{value:"Selecting a ribbon item",id:"selecting-a-ribbon-item",children:[]},{value:"Unselecting a ribbon item",id:"unselecting-a-ribbon-item",children:[]}]},{value:"Checking if a ribbon item is selected",id:"checking-if-a-ribbon-item-is-selected",children:[]},{value:"Getting selected items",id:"getting-selected-items",children:[]},{value:"Using Tree collection API",id:"using-tree-collection-api",children:[{value:"Adding controls",id:"adding-controls",children:[]},{value:"Getting controls by IDs",id:"getting-controls-by-ids",children:[]},{value:"Iterating through controls",id:"iterating-through-controls",children:[]},{value:"Iterating through children",id:"iterating-through-children",children:[]},{value:"Iterating through parents",id:"iterating-through-parents",children:[]},{value:"Rearranging Ribbon controls",id:"rearranging-ribbon-controls",children:[]},{value:"Making copies of controls",id:"making-copies-of-controls",children:[]},{value:"Clearing Ribbon",id:"clearing-ribbon",children:[]}]}],r={rightToc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(b.a)({},r,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"settinggetting-values-and-states"},"Setting/getting values and states"),Object(l.b)("p",null,"You can change the value or state (for a TwoState button) of a control with the help of the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_setstate_method"},"setState()")," method. It takes one parameter: a ",Object(l.b)("em",{parentName:"p"},"key-value")," pair with the ID of the control and its new value (state)."),Object(l.b)("p",null,"This is how you can set the state of a twoState button:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'{ type:"button", twoState:true, id:"check" }\n...\nribbon.setState({"check":true});\nribbon.setState({"check":false});\n')),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/i7kabram"},"https://snippet.dhtmlx.com/i7kabram"),"\tRibbon. Set State"),Object(l.b)("p",null,"And this is how you can change the value of an input:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'{ type:"input", id: "file_name" }\n...\nribbon.setState({"file_name":"My file"});\n')),Object(l.b)("p",null,"To get the current value of the control, use the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_getstate_method"},"getState()")," method. "),Object(l.b)("p",null,"This is what the method returns for a TwoState button:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'{ type:"button", twoState:true, id:"check" }\n...\nribbon.getState();\n// { check:true }\n// or\n// { check:false }\n')),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/coei9fys"},"https://snippet.dhtmlx.com/coei9fys"),"\tRibbon. Get State"),Object(l.b)("p",null,"And this is how you can get the current value of an input:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'{ type:"input", id:"file_name", value:"My file" }\n...\nribbon.getState();\n\n// {"file_name":"My file"}\n')),Object(l.b)("h2",{id:"hiding-and-showing-controls"},"Hiding and showing controls"),Object(l.b)("p",null,"You can show or hide controls by their IDs. Pass them to the corresponding methods - ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_show_method"},"show()")," and ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_hide_method"},"hide()"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.hide("add_btn");\nribbon.show(["save_btn","del_btn"]);\n')),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/1jkf7954"},"https://snippet.dhtmlx.com/1jkf7954"),"\tRibbon. Show/Hide Ribbon Item"),Object(l.b)("p",null,"Starting from v7.0, it is possible to hide/show all Ribbon controls on the page at once by using the methods without parameters:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"// hides all Ribbon controls\nribbon.hide();\n// shows all Ribbon controls\nribbon.show();\n")),Object(l.b)("h2",{id:"disabling-and-enabling-controls"},"Disabling and enabling controls"),Object(l.b)("p",null,"You can disable or enable controls. The related methods - ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_enable_method"},"enable()")," and ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_disable_method"},"disable()")," - take the IDs of controls as parameters:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.disable("add_btn");\nribbon.enable(["save_btn","del_btn"]);\n')),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/l3f8pq2g"},"https://snippet.dhtmlx.com/l3f8pq2g"),"\tRibbon. Enable/Disable Ribbon Item"),Object(l.b)("p",null,"Starting from v7.0, it is possible to disable/enable all Ribbon controls on the page at once by using the methods without parameters:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"// disables all Ribbon controls\nribbon.disable();\n// enables all Ribbon controls\nribbon.enable();\n")),Object(l.b)("h2",{id:"checking-if-a-ribbon-item-is-disabled"},"Checking if a Ribbon item is disabled"),Object(l.b)("p",null,"To check if an item of Ribbon is disabled, call the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_isdisabled_method"},"isDisabled()")," method. The method takes one parameter:"),Object(l.b)("table",{className:"webixdoc_links"},Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",{className:"webixdoc_links0"},Object(l.b)("b",null,"id")),Object(l.b)("td",null,"(",Object(l.b)("i",null,"string"),") an id of an item")))),Object(l.b)("br",null),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.isDisabled("1"); // -> true/false\n')),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/l3f8pq2g"},"https://snippet.dhtmlx.com/l3f8pq2g"),"\tRibbon. Enable/Disable Ribbon Item"),Object(l.b)("h2",{id:"selectingunselecting-an-item"},"Selecting/Unselecting an item"),Object(l.b)("h3",{id:"selecting-a-ribbon-item"},"Selecting a ribbon item"),Object(l.b)("p",null,"To select a particular Ribbon item, make use of the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_select_method"},"select()")," method of Ribbon. The method takes two parameters:"),Object(l.b)("table",{className:"webixdoc_links"},Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",{className:"webixdoc_links0"},Object(l.b)("b",null,"id")),Object(l.b)("td",null,"(",Object(l.b)("i",null,"string"),") an id of an item")),Object(l.b)("tr",null,Object(l.b)("td",{className:"webixdoc_links0"},Object(l.b)("b",null,"unselect")),Object(l.b)("td",null,"(",Object(l.b)("i",null,"boolean"),") optional, ",Object(l.b)("i",null,"true")," - to unselect previously selected items, otherwise - ",Object(l.b)("i",null,"false"),"; ",Object(l.b)("i",null,"true")," by default")))),Object(l.b)("br",null),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.select("print");\n')),Object(l.b)("p",null,"{{sample ribbon/03_usage/06_select_unselect.html}}"),Object(l.b)("h3",{id:"unselecting-a-ribbon-item"},"Unselecting a ribbon item"),Object(l.b)("p",null,"To remove selection from a selected item, apply the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_unselect_method"},"unselect()")," method of Ribbon. The method may take the id of an item as a parameter:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'// unselects a specified selected item\nribbon.unselect("print");\n')),Object(l.b)("p",null,"It is also possible to remove selection from all previously selected items of Ribbon via the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_unselect_method"},"unselect()")," method:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"// unselects all previously selected items\nribbon.unselect();\n")),Object(l.b)("p",null,"{{sample ribbon/03_usage/06_select_unselect.html}}"),Object(l.b)("h2",{id:"checking-if-a-ribbon-item-is-selected"},"Checking if a ribbon item is selected"),Object(l.b)("p",null,"To check if an item of Ribbon is selected, call the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_isselected_method"},"isSelected()")," method. The method takes one parameter:"),Object(l.b)("table",{className:"webixdoc_links"},Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",{className:"webixdoc_links0"},Object(l.b)("b",null,"id")),Object(l.b)("td",null,"(",Object(l.b)("i",null,"string"),") an id of a ribbon item")))),Object(l.b)("br",null),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.isSelected("print"); // -> returns true/false\n')),Object(l.b)("p",null,"{{sample ribbon/03_usage/06_select_unselect.html}}"),Object(l.b)("h2",{id:"getting-selected-items"},"Getting selected items"),Object(l.b)("p",null,"To get the selected items, call the ",Object(l.b)("a",{parentName:"p",href:"/ribbon/api/ribbon_getselected_method"},"getSelected()")," method. The method returns an array of IDs of selected items:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.getSelected(); // -> ["selected_1", "selected_1.1"]\n')),Object(l.b)("h2",{id:"using-tree-collection-api"},"Using Tree collection API"),Object(l.b)("h3",{id:"adding-controls"},"Adding controls"),Object(l.b)("p",null,"You can add controls dynamically with the ",Object(l.b)("strong",null,"add()")," method of ",Object(l.b)("a",{parentName:"p",href:"/tree_collection/api/refs/treecollection"},"TreeCollection"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.add({\n    type:"button",\n    icon:"dxi-plus",\n    value:"New"\n},-1,"blockId");\n')),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://snippet.dhtmlx.com/bphk7h9u"},"https://snippet.dhtmlx.com/bphk7h9u"),"\tRibbon. Add"),Object(l.b)("p",null,"This is how you can add a block of controls:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.add({\n    label:"File",\n    type:"block",\n    id:"files",\n    direction:"row",\n    items: [\n        {\n            icon: "dxi dxi-undo",\n            size: "small",\n            ribbonHeight: "double"\n        },\n        {\n            icon: "dxi dxi-redo",\n            size: "small",\n            ribbonHeight: "double"\n        }\n    ]\n});\n')),Object(l.b)("h3",{id:"getting-controls-by-ids"},"Getting controls by IDs"),Object(l.b)("p",null,"You can get a particular Ribbon control by its ID via the ",Object(l.b)("strong",null,"getItem()")," method:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var add_btn = ribbon.data.getItem("add_btn");\n')),Object(l.b)("p",null,"To get the ID of the parent of the control, call the ",Object(l.b)("strong",null,"getParent()")," method:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var parentId = ribbon.data.getParent("add_btn");\n')),Object(l.b)("p",null,"You can also access the children of a control with the ",Object(l.b)("strong",null,"getItems()")," method:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'var items = ribbon.data.getItems("block1");\n')),Object(l.b)("p",null,"You can use the ",Object(l.b)("strong",null,"getLength()")," method of TreeCollection to count children of a control:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.getLength("block1");\n')),Object(l.b)("h3",{id:"iterating-through-controls"},"Iterating through controls"),Object(l.b)("p",null,"You can work with all (or some) Ribbon controls with the help of the ",Object(l.b)("strong",null,"map()")," method of TreeCollection:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.map(function(item){\n    // remove all icons\n    item.icon = "";\n});\nribbon.paint();\n')),Object(l.b)("h3",{id:"iterating-through-children"},"Iterating through children"),Object(l.b)("p",null,"To iterate through all controls in a particular block, pass one more parameter to ",Object(l.b)("strong",null,"map()")," - the ID of the block:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.map(function(item){\n    // remove all icons\n    item.icon = "";\n},"bl_1");\nribbon.paint();\n')),Object(l.b)("p",null,"If you want to iterate only through immediate children, pass a third parameter - ",Object(l.b)("em",{parentName:"p"},"false"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.map(function(item){\n    /// remove all icons\n    item.icon = "";\n},"bl_1",false);\nribbon.paint();\n')),Object(l.b)("p",null,"Iterating through children is also can be done with the ",Object(l.b)("strong",null,"eachChild()")," method of TreeCollection:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.eachChild("bl_1",function(item){\n    // remove all icons\n    item.icon = "";\n});\nribbon.paint();\n')),Object(l.b)("p",null,"To access only the immediate children, add the ",Object(l.b)("strong",null,"direct")," parameter and set it to ",Object(l.b)("em",{parentName:"p"},"false"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.eachChild("bl_1", function(item){\n    // remove all icons\n    item.icon = "";\n},false);\nribbon.paint();\n')),Object(l.b)("p",null,"To check whether an item has childs, use the ",Object(l.b)("strong",null,"haveItems()")," method of TreeCollection:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.haveItems("block1");\n// -> true\n')),Object(l.b)("h3",{id:"iterating-through-parents"},"Iterating through parents"),Object(l.b)("p",null,"To iterate through all the parent items (the immediate parent and its parent, etc. until the parent is the ribbon itself), use the ",Object(l.b)("strong",null,"eachParent()")," method of TreeCollection:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.eachParent("new_btn",function(item){\n    console.log(item)\n});\n')),Object(l.b)("h3",{id:"rearranging-ribbon-controls"},"Rearranging Ribbon controls"),Object(l.b)("p",null,"You can move Ribbon items to different positions with the ",Object(l.b)("strong",null,"move()"),' method of TreeCollection. For example, this is how you can move a block with ID "bl_2" to the right edge of the Ribbon:'),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.move("bl_2",-1);\n')),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The ID should always be a string, even if in the configuration of control you've set it as a number."))),Object(l.b)("p",null,"To get the current position of a block, use the ",Object(l.b)("strong",null,"getIndex()")," method of TreeCollection:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.getIndex("bl_2");\n')),Object(l.b)("h3",{id:"making-copies-of-controls"},"Making copies of controls"),Object(l.b)("p",null,"You can add a copy of a control and place it in the specified position on the ribbon with the ",Object(l.b)("strong",null,"copy()")," method of TreeCollection:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.copy("block1",2);\n')),Object(l.b)("p",null,"You can copy a control into a block of the same ribbon:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon.data.copy("save_btn",1,ribbon.data,"block2");\n')),Object(l.b)("p",null,"You can also copy a control and place it into another ribbon:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},'ribbon1.data.copy("save_btn",1,ribbon2.data,"block3");\n')),Object(l.b)("h3",{id:"clearing-ribbon"},"Clearing Ribbon"),Object(l.b)("p",null,"To remove all controls from Ribbon, users should call the ",Object(l.b)("strong",null,"removeAll()")," method of TreeCollection. Afterwards, you can load other items."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"ribbon.data.removeAll();\nribbon.data.parse(new_controls);\n")),Object(l.b)("p",null,"check iteration through children - works badly for map() with false param in case of css",Object(l.b)("br",null),"\nadd params for data/tree collection methods"))}s.isMDXComponent=!0}}]);