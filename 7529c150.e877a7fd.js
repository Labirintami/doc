(window.webpackJsonp=window.webpackJsonp||[]).push([[791],{850:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),s=(n(0),n(1808)),b=n(1809),l={sidebar_label:"setState",title:"setState"},c={unversionedId:"tree/api/tree_setstate_method",id:"tree/api/tree_setstate_method",isDocsHomePage:!1,title:"setState",description:"@short: sets state for a tree",source:"@site/docs/tree/api/tree_setstate_method.md",slug:"/tree/api/tree_setstate_method",permalink:"/tree/api/tree_setstate_method",editUrl:"https://github.com/Labirintami/doc/edit/master/docs/tree/api/tree_setstate_method.md",version:"current",sidebar_label:"setState",sidebar:"docs",previous:{title:"paint",permalink:"/tree/api/tree_paint_method"},next:{title:"toggle",permalink:"/tree/api/tree_toggle_method"}},i=[],o={rightToc:i};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)(b.c,{mdxType:"Short"},"sets state for a tree"),Object(s.b)(b.d,{mdxType:"Signature"},"setState(state: object): void;"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"treeState \tobject \t\tan object of ",Object(s.b)("i",null,"key:value")," pairs, where ",Object(s.b)("i",null,"key")," is the id of a tree item and ",Object(s.b)("i",null,"value")," is its state")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-js"},"// getting the state of a tree\nvar treeState = tree.getState();\n\n// restoring the state of a tree\ntree.setState(treeState);\n")),Object(s.b)("p",null," api_method"),Object(s.b)(b.b,{mdxType:"Descr"},Object(s.b)("p",null,"The ",Object(s.b)("strong",null,"treeState")," object contains ",Object(s.b)("em",{parentName:"p"},"key:value")," pairs, where ",Object(s.b)("em",{parentName:"p"},"key")," is the id of a tree item and ",Object(s.b)("em",{parentName:"p"},"value")," is its state. The state object of a tree item includes two properties:"),Object(s.b)("table",{className:"webixdoc_links"},Object(s.b)("tbody",null,Object(s.b)("tr",null,Object(s.b)("td",{className:"webixdoc_links0"},Object(s.b)("b",null,"selected")),Object(s.b)("td",null,"(",Object(s.b)("i",null,"number"),") the status of a checkbox of an item:",Object(s.b)("ul",null,Object(s.b)("li",null,"0 - unselected "),Object(s.b)("li",null,"1 - selected  "),Object(s.b)("li",null,"indeterminate (for the parent item, in case its children are partially checked) ")))),Object(s.b)("tr",null,Object(s.b)("td",{className:"webixdoc_links0"},Object(s.b)("b",null,"open")),Object(s.b)("td",null,"(",Object(s.b)("i",null,"boolean"),") checks whether a tree item is open (for folders with items)")))),Object(s.b)("p",null,"Here is an example of a treeState object:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-js"},'{\n    "books": {\n        "open": true,\n        "selected": 2\n    },\n\n    "mystery": {\n        "open": true,\n        "selected": 2\n    },\n\n    "bsthrillers": {\n        "selected": 1\n    },\n\n    "rc": {\n        "selected": 0\n    },\n\n    "ir": {\n        "selected": 1\n    },\n\n    "history": {\n        "selected": 0\n    },\n\n    "jmf": {\n        "selected": 0\n    },\n\n    "jd": {\n        "selected": 0\n    }\n}\n'))),Object(s.b)("p",null,"tree/api/tree_getstate_method.md"),Object(s.b)("a",{href:"https://snippet.dhtmlx.com/g0539az1",target:"_blank"},"Tree. Setting Tree State"),Object(s.b)(b.a,{mdxType:"Changelog"}),Object(s.b)("p",null," tree/work_with_tree.md#settinggettingtreestate"))}d.isMDXComponent=!0}}]);